import { GraphQLClient } from "graphql-request";
import Head from "next/head";
import { Constants } from "../../config";
import { GET_RESTAURANT_INFO } from "../../graphql/restaurant";
import { useGQLQuery } from "../../hooks/useGQLQuery";

export default function Home({ host, time, path, data }: any) {
  console.log(data);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>
        {data.restaurantConfig
          ? data.restaurantConfig.Restaurant[0].name
          : null}{" "}
        - Home Page
      </h1>
      <h2>Host: {host}</h2>
    </>
  );
}

export async function getStaticProps(context: any) {
  console.log("getStaticProps", context);

  const host = context.params.host;

  const endpoint = Constants.GraphQL_API;

  const graphQLClient = new GraphQLClient(endpoint);

  const data = await graphQLClient.request(GET_RESTAURANT_INFO, {
    domain: host,
  });

  const time = Date.now();

  return {
    props: {
      host,
      time,
      data,
    },
    revalidate: 10,
  };
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: "blocking",
  };
}
