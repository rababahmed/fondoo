### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type CMSAbout {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String!
  isActive: Boolean
  restaurant: Restaurant!
  storyDescription: String
  storyHeading: String
  storyImage: String
}

input CMSAboutCreateInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
  restaurant: RestaurantCreateNestedOneWithoutCMSAboutInput!
  storyDescription: String
  storyHeading: String
  storyImage: String
}

input CMSAboutCreateManyRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
  storyDescription: String
  storyHeading: String
  storyImage: String
}

input CMSAboutCreateManyRestaurantInputEnvelope {
  data: [CMSAboutCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input CMSAboutCreateNestedManyWithoutRestaurantInput {
  connect: [CMSAboutWhereUniqueInput!]
  connectOrCreate: [CMSAboutCreateOrConnectWithoutRestaurantInput!]
  create: [CMSAboutCreateWithoutRestaurantInput!]
  createMany: CMSAboutCreateManyRestaurantInputEnvelope
}

input CMSAboutCreateOrConnectWithoutRestaurantInput {
  create: CMSAboutCreateWithoutRestaurantInput!
  where: CMSAboutWhereUniqueInput!
}

input CMSAboutCreateWithoutRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
  storyDescription: String
  storyHeading: String
  storyImage: String
}

input CMSAboutListRelationFilter {
  every: CMSAboutWhereInput
  none: CMSAboutWhereInput
  some: CMSAboutWhereInput
}

input CMSAboutOrderByInput {
  headerDescription: SortOrder
  headerHeading: SortOrder
  headerImage: SortOrder
  id: SortOrder
  isActive: SortOrder
  restaurantId: SortOrder
  storyDescription: SortOrder
  storyHeading: SortOrder
  storyImage: SortOrder
}

input CMSAboutScalarWhereInput {
  AND: [CMSAboutScalarWhereInput!]
  NOT: [CMSAboutScalarWhereInput!]
  OR: [CMSAboutScalarWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurantId: StringFilter
  storyDescription: StringNullableFilter
  storyHeading: StringNullableFilter
  storyImage: StringNullableFilter
}

input CMSAboutUpdateInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutCMSAboutInput
  storyDescription: NullableStringFieldUpdateOperationsInput
  storyHeading: NullableStringFieldUpdateOperationsInput
  storyImage: NullableStringFieldUpdateOperationsInput
}

input CMSAboutUpdateManyMutationInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  storyDescription: NullableStringFieldUpdateOperationsInput
  storyHeading: NullableStringFieldUpdateOperationsInput
  storyImage: NullableStringFieldUpdateOperationsInput
}

input CMSAboutUpdateManyWithWhereWithoutRestaurantInput {
  data: CMSAboutUpdateManyMutationInput!
  where: CMSAboutScalarWhereInput!
}

input CMSAboutUpdateManyWithoutRestaurantInput {
  connect: [CMSAboutWhereUniqueInput!]
  connectOrCreate: [CMSAboutCreateOrConnectWithoutRestaurantInput!]
  create: [CMSAboutCreateWithoutRestaurantInput!]
  createMany: CMSAboutCreateManyRestaurantInputEnvelope
  delete: [CMSAboutWhereUniqueInput!]
  deleteMany: [CMSAboutScalarWhereInput!]
  disconnect: [CMSAboutWhereUniqueInput!]
  set: [CMSAboutWhereUniqueInput!]
  update: [CMSAboutUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [CMSAboutUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [CMSAboutUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input CMSAboutUpdateWithWhereUniqueWithoutRestaurantInput {
  data: CMSAboutUpdateWithoutRestaurantInput!
  where: CMSAboutWhereUniqueInput!
}

input CMSAboutUpdateWithoutRestaurantInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  storyDescription: NullableStringFieldUpdateOperationsInput
  storyHeading: NullableStringFieldUpdateOperationsInput
  storyImage: NullableStringFieldUpdateOperationsInput
}

input CMSAboutUpsertWithWhereUniqueWithoutRestaurantInput {
  create: CMSAboutCreateWithoutRestaurantInput!
  update: CMSAboutUpdateWithoutRestaurantInput!
  where: CMSAboutWhereUniqueInput!
}

input CMSAboutWhereInput {
  AND: [CMSAboutWhereInput!]
  NOT: [CMSAboutWhereInput!]
  OR: [CMSAboutWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
  storyDescription: StringNullableFilter
  storyHeading: StringNullableFilter
  storyImage: StringNullableFilter
}

input CMSAboutWhereUniqueInput {
  id: String
}

type CMSContact {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String!
  isActive: Boolean
  restaurant: Restaurant!
}

input CMSContactCreateInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
  restaurant: RestaurantCreateNestedOneWithoutCMSContactInput!
}

input CMSContactCreateManyRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
}

input CMSContactCreateManyRestaurantInputEnvelope {
  data: [CMSContactCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input CMSContactCreateNestedManyWithoutRestaurantInput {
  connect: [CMSContactWhereUniqueInput!]
  connectOrCreate: [CMSContactCreateOrConnectWithoutRestaurantInput!]
  create: [CMSContactCreateWithoutRestaurantInput!]
  createMany: CMSContactCreateManyRestaurantInputEnvelope
}

input CMSContactCreateOrConnectWithoutRestaurantInput {
  create: CMSContactCreateWithoutRestaurantInput!
  where: CMSContactWhereUniqueInput!
}

input CMSContactCreateWithoutRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
}

input CMSContactListRelationFilter {
  every: CMSContactWhereInput
  none: CMSContactWhereInput
  some: CMSContactWhereInput
}

input CMSContactOrderByInput {
  headerDescription: SortOrder
  headerHeading: SortOrder
  headerImage: SortOrder
  id: SortOrder
  isActive: SortOrder
  restaurantId: SortOrder
}

input CMSContactScalarWhereInput {
  AND: [CMSContactScalarWhereInput!]
  NOT: [CMSContactScalarWhereInput!]
  OR: [CMSContactScalarWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurantId: StringFilter
}

input CMSContactUpdateInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutCMSContactInput
}

input CMSContactUpdateManyMutationInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
}

input CMSContactUpdateManyWithWhereWithoutRestaurantInput {
  data: CMSContactUpdateManyMutationInput!
  where: CMSContactScalarWhereInput!
}

input CMSContactUpdateManyWithoutRestaurantInput {
  connect: [CMSContactWhereUniqueInput!]
  connectOrCreate: [CMSContactCreateOrConnectWithoutRestaurantInput!]
  create: [CMSContactCreateWithoutRestaurantInput!]
  createMany: CMSContactCreateManyRestaurantInputEnvelope
  delete: [CMSContactWhereUniqueInput!]
  deleteMany: [CMSContactScalarWhereInput!]
  disconnect: [CMSContactWhereUniqueInput!]
  set: [CMSContactWhereUniqueInput!]
  update: [CMSContactUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [CMSContactUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [CMSContactUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input CMSContactUpdateWithWhereUniqueWithoutRestaurantInput {
  data: CMSContactUpdateWithoutRestaurantInput!
  where: CMSContactWhereUniqueInput!
}

input CMSContactUpdateWithoutRestaurantInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
}

input CMSContactUpsertWithWhereUniqueWithoutRestaurantInput {
  create: CMSContactCreateWithoutRestaurantInput!
  update: CMSContactUpdateWithoutRestaurantInput!
  where: CMSContactWhereUniqueInput!
}

input CMSContactWhereInput {
  AND: [CMSContactWhereInput!]
  NOT: [CMSContactWhereInput!]
  OR: [CMSContactWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
}

input CMSContactWhereUniqueInput {
  id: String
}

type CMSHome {
  aboutDescription: String
  aboutHeading: String
  aboutImage: String
  dealsDescription: String
  dealsHeading: String
  dealsImage: String
  heroDescription: String
  heroHeading: String
  heroImage: String
  id: String!
  popularDishesDescription: String
  popularDishesHeading: String
  popularDishesImage: String
  reservationDescription: String
  reservationHeading: String
  reservationImage: String
  restaurant: Restaurant!
}

input CMSHomeCreateInput {
  aboutDescription: String
  aboutHeading: String
  aboutImage: String
  dealsDescription: String
  dealsHeading: String
  dealsImage: String
  heroDescription: String
  heroHeading: String
  heroImage: String
  id: String
  isActive: Boolean
  popularDishesDescription: String
  popularDishesHeading: String
  popularDishesImage: String
  reservationDescription: String
  reservationHeading: String
  reservationImage: String
  restaurant: RestaurantCreateNestedOneWithoutCMSHomeInput!
}

input CMSHomeCreateManyRestaurantInput {
  aboutDescription: String
  aboutHeading: String
  aboutImage: String
  dealsDescription: String
  dealsHeading: String
  dealsImage: String
  heroDescription: String
  heroHeading: String
  heroImage: String
  id: String
  isActive: Boolean
  popularDishesDescription: String
  popularDishesHeading: String
  popularDishesImage: String
  reservationDescription: String
  reservationHeading: String
  reservationImage: String
}

input CMSHomeCreateManyRestaurantInputEnvelope {
  data: [CMSHomeCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input CMSHomeCreateNestedManyWithoutRestaurantInput {
  connect: [CMSHomeWhereUniqueInput!]
  connectOrCreate: [CMSHomeCreateOrConnectWithoutRestaurantInput!]
  create: [CMSHomeCreateWithoutRestaurantInput!]
  createMany: CMSHomeCreateManyRestaurantInputEnvelope
}

input CMSHomeCreateOrConnectWithoutRestaurantInput {
  create: CMSHomeCreateWithoutRestaurantInput!
  where: CMSHomeWhereUniqueInput!
}

input CMSHomeCreateWithoutRestaurantInput {
  aboutDescription: String
  aboutHeading: String
  aboutImage: String
  dealsDescription: String
  dealsHeading: String
  dealsImage: String
  heroDescription: String
  heroHeading: String
  heroImage: String
  id: String
  isActive: Boolean
  popularDishesDescription: String
  popularDishesHeading: String
  popularDishesImage: String
  reservationDescription: String
  reservationHeading: String
  reservationImage: String
}

input CMSHomeListRelationFilter {
  every: CMSHomeWhereInput
  none: CMSHomeWhereInput
  some: CMSHomeWhereInput
}

input CMSHomeOrderByInput {
  aboutDescription: SortOrder
  aboutHeading: SortOrder
  aboutImage: SortOrder
  dealsDescription: SortOrder
  dealsHeading: SortOrder
  dealsImage: SortOrder
  heroDescription: SortOrder
  heroHeading: SortOrder
  heroImage: SortOrder
  id: SortOrder
  isActive: SortOrder
  popularDishesDescription: SortOrder
  popularDishesHeading: SortOrder
  popularDishesImage: SortOrder
  reservationDescription: SortOrder
  reservationHeading: SortOrder
  reservationImage: SortOrder
  restaurantId: SortOrder
}

input CMSHomeScalarWhereInput {
  AND: [CMSHomeScalarWhereInput!]
  NOT: [CMSHomeScalarWhereInput!]
  OR: [CMSHomeScalarWhereInput!]
  aboutDescription: StringNullableFilter
  aboutHeading: StringNullableFilter
  aboutImage: StringNullableFilter
  dealsDescription: StringNullableFilter
  dealsHeading: StringNullableFilter
  dealsImage: StringNullableFilter
  heroDescription: StringNullableFilter
  heroHeading: StringNullableFilter
  heroImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  popularDishesDescription: StringNullableFilter
  popularDishesHeading: StringNullableFilter
  popularDishesImage: StringNullableFilter
  reservationDescription: StringNullableFilter
  reservationHeading: StringNullableFilter
  reservationImage: StringNullableFilter
  restaurantId: StringFilter
}

input CMSHomeUpdateInput {
  aboutDescription: NullableStringFieldUpdateOperationsInput
  aboutHeading: NullableStringFieldUpdateOperationsInput
  aboutImage: NullableStringFieldUpdateOperationsInput
  dealsDescription: NullableStringFieldUpdateOperationsInput
  dealsHeading: NullableStringFieldUpdateOperationsInput
  dealsImage: NullableStringFieldUpdateOperationsInput
  heroDescription: NullableStringFieldUpdateOperationsInput
  heroHeading: NullableStringFieldUpdateOperationsInput
  heroImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  popularDishesDescription: NullableStringFieldUpdateOperationsInput
  popularDishesHeading: NullableStringFieldUpdateOperationsInput
  popularDishesImage: NullableStringFieldUpdateOperationsInput
  reservationDescription: NullableStringFieldUpdateOperationsInput
  reservationHeading: NullableStringFieldUpdateOperationsInput
  reservationImage: NullableStringFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutCMSHomeInput
}

input CMSHomeUpdateManyMutationInput {
  aboutDescription: NullableStringFieldUpdateOperationsInput
  aboutHeading: NullableStringFieldUpdateOperationsInput
  aboutImage: NullableStringFieldUpdateOperationsInput
  dealsDescription: NullableStringFieldUpdateOperationsInput
  dealsHeading: NullableStringFieldUpdateOperationsInput
  dealsImage: NullableStringFieldUpdateOperationsInput
  heroDescription: NullableStringFieldUpdateOperationsInput
  heroHeading: NullableStringFieldUpdateOperationsInput
  heroImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  popularDishesDescription: NullableStringFieldUpdateOperationsInput
  popularDishesHeading: NullableStringFieldUpdateOperationsInput
  popularDishesImage: NullableStringFieldUpdateOperationsInput
  reservationDescription: NullableStringFieldUpdateOperationsInput
  reservationHeading: NullableStringFieldUpdateOperationsInput
  reservationImage: NullableStringFieldUpdateOperationsInput
}

input CMSHomeUpdateManyWithWhereWithoutRestaurantInput {
  data: CMSHomeUpdateManyMutationInput!
  where: CMSHomeScalarWhereInput!
}

input CMSHomeUpdateManyWithoutRestaurantInput {
  connect: [CMSHomeWhereUniqueInput!]
  connectOrCreate: [CMSHomeCreateOrConnectWithoutRestaurantInput!]
  create: [CMSHomeCreateWithoutRestaurantInput!]
  createMany: CMSHomeCreateManyRestaurantInputEnvelope
  delete: [CMSHomeWhereUniqueInput!]
  deleteMany: [CMSHomeScalarWhereInput!]
  disconnect: [CMSHomeWhereUniqueInput!]
  set: [CMSHomeWhereUniqueInput!]
  update: [CMSHomeUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [CMSHomeUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [CMSHomeUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input CMSHomeUpdateWithWhereUniqueWithoutRestaurantInput {
  data: CMSHomeUpdateWithoutRestaurantInput!
  where: CMSHomeWhereUniqueInput!
}

input CMSHomeUpdateWithoutRestaurantInput {
  aboutDescription: NullableStringFieldUpdateOperationsInput
  aboutHeading: NullableStringFieldUpdateOperationsInput
  aboutImage: NullableStringFieldUpdateOperationsInput
  dealsDescription: NullableStringFieldUpdateOperationsInput
  dealsHeading: NullableStringFieldUpdateOperationsInput
  dealsImage: NullableStringFieldUpdateOperationsInput
  heroDescription: NullableStringFieldUpdateOperationsInput
  heroHeading: NullableStringFieldUpdateOperationsInput
  heroImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  popularDishesDescription: NullableStringFieldUpdateOperationsInput
  popularDishesHeading: NullableStringFieldUpdateOperationsInput
  popularDishesImage: NullableStringFieldUpdateOperationsInput
  reservationDescription: NullableStringFieldUpdateOperationsInput
  reservationHeading: NullableStringFieldUpdateOperationsInput
  reservationImage: NullableStringFieldUpdateOperationsInput
}

input CMSHomeUpsertWithWhereUniqueWithoutRestaurantInput {
  create: CMSHomeCreateWithoutRestaurantInput!
  update: CMSHomeUpdateWithoutRestaurantInput!
  where: CMSHomeWhereUniqueInput!
}

input CMSHomeWhereInput {
  AND: [CMSHomeWhereInput!]
  NOT: [CMSHomeWhereInput!]
  OR: [CMSHomeWhereInput!]
  aboutDescription: StringNullableFilter
  aboutHeading: StringNullableFilter
  aboutImage: StringNullableFilter
  dealsDescription: StringNullableFilter
  dealsHeading: StringNullableFilter
  dealsImage: StringNullableFilter
  heroDescription: StringNullableFilter
  heroHeading: StringNullableFilter
  heroImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  popularDishesDescription: StringNullableFilter
  popularDishesHeading: StringNullableFilter
  popularDishesImage: StringNullableFilter
  reservationDescription: StringNullableFilter
  reservationHeading: StringNullableFilter
  reservationImage: StringNullableFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
}

input CMSHomeWhereUniqueInput {
  id: String
}

type CMSReservation {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String!
  isActive: Boolean
  restaurant: Restaurant!
}

input CMSReservationCreateInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
  restaurant: RestaurantCreateNestedOneWithoutCMSReservationInput!
}

input CMSReservationCreateManyRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
}

input CMSReservationCreateManyRestaurantInputEnvelope {
  data: [CMSReservationCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input CMSReservationCreateNestedManyWithoutRestaurantInput {
  connect: [CMSReservationWhereUniqueInput!]
  connectOrCreate: [CMSReservationCreateOrConnectWithoutRestaurantInput!]
  create: [CMSReservationCreateWithoutRestaurantInput!]
  createMany: CMSReservationCreateManyRestaurantInputEnvelope
}

input CMSReservationCreateOrConnectWithoutRestaurantInput {
  create: CMSReservationCreateWithoutRestaurantInput!
  where: CMSReservationWhereUniqueInput!
}

input CMSReservationCreateWithoutRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
}

input CMSReservationListRelationFilter {
  every: CMSReservationWhereInput
  none: CMSReservationWhereInput
  some: CMSReservationWhereInput
}

input CMSReservationOrderByInput {
  headerDescription: SortOrder
  headerHeading: SortOrder
  headerImage: SortOrder
  id: SortOrder
  isActive: SortOrder
  restaurantId: SortOrder
}

input CMSReservationScalarWhereInput {
  AND: [CMSReservationScalarWhereInput!]
  NOT: [CMSReservationScalarWhereInput!]
  OR: [CMSReservationScalarWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurantId: StringFilter
}

input CMSReservationUpdateInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutCMSReservationInput
}

input CMSReservationUpdateManyMutationInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
}

input CMSReservationUpdateManyWithWhereWithoutRestaurantInput {
  data: CMSReservationUpdateManyMutationInput!
  where: CMSReservationScalarWhereInput!
}

input CMSReservationUpdateManyWithoutRestaurantInput {
  connect: [CMSReservationWhereUniqueInput!]
  connectOrCreate: [CMSReservationCreateOrConnectWithoutRestaurantInput!]
  create: [CMSReservationCreateWithoutRestaurantInput!]
  createMany: CMSReservationCreateManyRestaurantInputEnvelope
  delete: [CMSReservationWhereUniqueInput!]
  deleteMany: [CMSReservationScalarWhereInput!]
  disconnect: [CMSReservationWhereUniqueInput!]
  set: [CMSReservationWhereUniqueInput!]
  update: [CMSReservationUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [CMSReservationUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [CMSReservationUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input CMSReservationUpdateWithWhereUniqueWithoutRestaurantInput {
  data: CMSReservationUpdateWithoutRestaurantInput!
  where: CMSReservationWhereUniqueInput!
}

input CMSReservationUpdateWithoutRestaurantInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
}

input CMSReservationUpsertWithWhereUniqueWithoutRestaurantInput {
  create: CMSReservationCreateWithoutRestaurantInput!
  update: CMSReservationUpdateWithoutRestaurantInput!
  where: CMSReservationWhereUniqueInput!
}

input CMSReservationWhereInput {
  AND: [CMSReservationWhereInput!]
  NOT: [CMSReservationWhereInput!]
  OR: [CMSReservationWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
}

input CMSReservationWhereUniqueInput {
  id: String
}

type CMSReview {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String!
  isActive: Boolean
  restaurant: Restaurant!
}

input CMSReviewCreateInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
  restaurant: RestaurantCreateNestedOneWithoutCMSReviewInput!
}

input CMSReviewCreateManyRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
}

input CMSReviewCreateManyRestaurantInputEnvelope {
  data: [CMSReviewCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input CMSReviewCreateNestedManyWithoutRestaurantInput {
  connect: [CMSReviewWhereUniqueInput!]
  connectOrCreate: [CMSReviewCreateOrConnectWithoutRestaurantInput!]
  create: [CMSReviewCreateWithoutRestaurantInput!]
  createMany: CMSReviewCreateManyRestaurantInputEnvelope
}

input CMSReviewCreateOrConnectWithoutRestaurantInput {
  create: CMSReviewCreateWithoutRestaurantInput!
  where: CMSReviewWhereUniqueInput!
}

input CMSReviewCreateWithoutRestaurantInput {
  headerDescription: String
  headerHeading: String
  headerImage: String
  id: String
  isActive: Boolean
}

input CMSReviewListRelationFilter {
  every: CMSReviewWhereInput
  none: CMSReviewWhereInput
  some: CMSReviewWhereInput
}

input CMSReviewOrderByInput {
  headerDescription: SortOrder
  headerHeading: SortOrder
  headerImage: SortOrder
  id: SortOrder
  isActive: SortOrder
  restaurantId: SortOrder
}

input CMSReviewScalarWhereInput {
  AND: [CMSReviewScalarWhereInput!]
  NOT: [CMSReviewScalarWhereInput!]
  OR: [CMSReviewScalarWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurantId: StringFilter
}

input CMSReviewUpdateInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutCMSReviewInput
}

input CMSReviewUpdateManyMutationInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
}

input CMSReviewUpdateManyWithWhereWithoutRestaurantInput {
  data: CMSReviewUpdateManyMutationInput!
  where: CMSReviewScalarWhereInput!
}

input CMSReviewUpdateManyWithoutRestaurantInput {
  connect: [CMSReviewWhereUniqueInput!]
  connectOrCreate: [CMSReviewCreateOrConnectWithoutRestaurantInput!]
  create: [CMSReviewCreateWithoutRestaurantInput!]
  createMany: CMSReviewCreateManyRestaurantInputEnvelope
  delete: [CMSReviewWhereUniqueInput!]
  deleteMany: [CMSReviewScalarWhereInput!]
  disconnect: [CMSReviewWhereUniqueInput!]
  set: [CMSReviewWhereUniqueInput!]
  update: [CMSReviewUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [CMSReviewUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [CMSReviewUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input CMSReviewUpdateWithWhereUniqueWithoutRestaurantInput {
  data: CMSReviewUpdateWithoutRestaurantInput!
  where: CMSReviewWhereUniqueInput!
}

input CMSReviewUpdateWithoutRestaurantInput {
  headerDescription: NullableStringFieldUpdateOperationsInput
  headerHeading: NullableStringFieldUpdateOperationsInput
  headerImage: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
}

input CMSReviewUpsertWithWhereUniqueWithoutRestaurantInput {
  create: CMSReviewCreateWithoutRestaurantInput!
  update: CMSReviewUpdateWithoutRestaurantInput!
  where: CMSReviewWhereUniqueInput!
}

input CMSReviewWhereInput {
  AND: [CMSReviewWhereInput!]
  NOT: [CMSReviewWhereInput!]
  OR: [CMSReviewWhereInput!]
  headerDescription: StringNullableFilter
  headerHeading: StringNullableFilter
  headerImage: StringNullableFilter
  id: StringFilter
  isActive: BoolNullableFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
}

input CMSReviewWhereUniqueInput {
  id: String
}

type Coupon {
  code: String!
  description: String
  discount: Discount!
  id: String!
  orders(after: OrderWhereUniqueInput, before: OrderWhereUniqueInput, first: Int, last: Int): [Order!]!
  value: Float!
}

input CouponCreateInput {
  code: String!
  description: String
  discount: Discount!
  id: String
  orders: OrderCreateNestedManyWithoutCouponInput
  value: Float!
}

input CouponCreateNestedOneWithoutOrdersInput {
  connect: CouponWhereUniqueInput
  connectOrCreate: CouponCreateOrConnectWithoutOrdersInput
  create: CouponCreateWithoutOrdersInput
}

input CouponCreateOrConnectWithoutOrdersInput {
  create: CouponCreateWithoutOrdersInput!
  where: CouponWhereUniqueInput!
}

input CouponCreateWithoutOrdersInput {
  code: String!
  description: String
  discount: Discount!
  id: String
  value: Float!
}

input CouponOrderByInput {
  code: SortOrder
  description: SortOrder
  discount: SortOrder
  id: SortOrder
  value: SortOrder
}

input CouponUpdateInput {
  code: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: EnumDiscountFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutCouponInput
  value: FloatFieldUpdateOperationsInput
}

input CouponUpdateOneWithoutOrdersInput {
  connect: CouponWhereUniqueInput
  connectOrCreate: CouponCreateOrConnectWithoutOrdersInput
  create: CouponCreateWithoutOrdersInput
  delete: Boolean
  disconnect: Boolean
  update: CouponUpdateWithoutOrdersInput
  upsert: CouponUpsertWithoutOrdersInput
}

input CouponUpdateWithoutOrdersInput {
  code: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: EnumDiscountFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  value: FloatFieldUpdateOperationsInput
}

input CouponUpsertWithoutOrdersInput {
  create: CouponCreateWithoutOrdersInput!
  update: CouponUpdateWithoutOrdersInput!
}

input CouponWhereInput {
  AND: [CouponWhereInput!]
  NOT: [CouponWhereInput!]
  OR: [CouponWhereInput!]
  code: StringFilter
  description: StringNullableFilter
  discount: EnumDiscountFilter
  id: StringFilter
  orders: OrderListRelationFilter
  value: FloatFilter
}

input CouponWhereUniqueInput {
  id: String
}

type Customer {
  addresses(after: CustomerAddressWhereUniqueInput, before: CustomerAddressWhereUniqueInput, first: Int, last: Int): [CustomerAddress!]!
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  orders(after: OrderWhereUniqueInput, before: OrderWhereUniqueInput, first: Int, last: Int): [Order!]!
  phone: String!
  restaurants(after: RestaurantWhereUniqueInput, before: RestaurantWhereUniqueInput, first: Int, last: Int): [Restaurant!]!
  token(after: CustomerTokenWhereUniqueInput, before: CustomerTokenWhereUniqueInput, first: Int, last: Int): [CustomerToken!]!
}

type CustomerAddress {
  Customer: Customer
  city: String!
  country: String!
  customerId: String
  id: String!
  postCode: String!
  streetAddress: String!
}

input CustomerAddressCreateInput {
  Customer: CustomerCreateNestedOneWithoutAddressesInput
  city: String!
  country: String!
  createdAt: DateTime
  id: String
  postCode: String!
  streetAddress: String!
}

input CustomerAddressCreateManyCustomerInput {
  city: String!
  country: String!
  createdAt: DateTime
  id: String
  postCode: String!
  streetAddress: String!
}

input CustomerAddressCreateManyCustomerInputEnvelope {
  data: [CustomerAddressCreateManyCustomerInput!]
  skipDuplicates: Boolean
}

input CustomerAddressCreateNestedManyWithoutCustomerInput {
  connect: [CustomerAddressWhereUniqueInput!]
  connectOrCreate: [CustomerAddressCreateOrConnectWithoutCustomerInput!]
  create: [CustomerAddressCreateWithoutCustomerInput!]
  createMany: CustomerAddressCreateManyCustomerInputEnvelope
}

input CustomerAddressCreateOrConnectWithoutCustomerInput {
  create: CustomerAddressCreateWithoutCustomerInput!
  where: CustomerAddressWhereUniqueInput!
}

input CustomerAddressCreateWithoutCustomerInput {
  city: String!
  country: String!
  createdAt: DateTime
  id: String
  postCode: String!
  streetAddress: String!
}

input CustomerAddressListRelationFilter {
  every: CustomerAddressWhereInput
  none: CustomerAddressWhereInput
  some: CustomerAddressWhereInput
}

input CustomerAddressOrderByInput {
  city: SortOrder
  country: SortOrder
  createdAt: SortOrder
  customerId: SortOrder
  id: SortOrder
  postCode: SortOrder
  streetAddress: SortOrder
}

input CustomerAddressScalarWhereInput {
  AND: [CustomerAddressScalarWhereInput!]
  NOT: [CustomerAddressScalarWhereInput!]
  OR: [CustomerAddressScalarWhereInput!]
  city: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  customerId: StringNullableFilter
  id: StringFilter
  postCode: StringFilter
  streetAddress: StringFilter
}

input CustomerAddressUpdateInput {
  Customer: CustomerUpdateOneWithoutAddressesInput
  city: StringFieldUpdateOperationsInput
  country: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  postCode: StringFieldUpdateOperationsInput
  streetAddress: StringFieldUpdateOperationsInput
}

input CustomerAddressUpdateManyMutationInput {
  city: StringFieldUpdateOperationsInput
  country: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  postCode: StringFieldUpdateOperationsInput
  streetAddress: StringFieldUpdateOperationsInput
}

input CustomerAddressUpdateManyWithWhereWithoutCustomerInput {
  data: CustomerAddressUpdateManyMutationInput!
  where: CustomerAddressScalarWhereInput!
}

input CustomerAddressUpdateManyWithoutCustomerInput {
  connect: [CustomerAddressWhereUniqueInput!]
  connectOrCreate: [CustomerAddressCreateOrConnectWithoutCustomerInput!]
  create: [CustomerAddressCreateWithoutCustomerInput!]
  createMany: CustomerAddressCreateManyCustomerInputEnvelope
  delete: [CustomerAddressWhereUniqueInput!]
  deleteMany: [CustomerAddressScalarWhereInput!]
  disconnect: [CustomerAddressWhereUniqueInput!]
  set: [CustomerAddressWhereUniqueInput!]
  update: [CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [CustomerAddressUpdateManyWithWhereWithoutCustomerInput!]
  upsert: [CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput!]
}

input CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput {
  data: CustomerAddressUpdateWithoutCustomerInput!
  where: CustomerAddressWhereUniqueInput!
}

input CustomerAddressUpdateWithoutCustomerInput {
  city: StringFieldUpdateOperationsInput
  country: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  postCode: StringFieldUpdateOperationsInput
  streetAddress: StringFieldUpdateOperationsInput
}

input CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput {
  create: CustomerAddressCreateWithoutCustomerInput!
  update: CustomerAddressUpdateWithoutCustomerInput!
  where: CustomerAddressWhereUniqueInput!
}

input CustomerAddressWhereInput {
  AND: [CustomerAddressWhereInput!]
  Customer: CustomerWhereInput
  NOT: [CustomerAddressWhereInput!]
  OR: [CustomerAddressWhereInput!]
  city: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  customerId: StringNullableFilter
  id: StringFilter
  postCode: StringFilter
  streetAddress: StringFilter
}

input CustomerAddressWhereUniqueInput {
  id: String
}

input CustomerCreateInput {
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutCustomerInput
  addresses: CustomerAddressCreateNestedManyWithoutCustomerInput
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  orders: OrderCreateNestedManyWithoutCustomerInput
  password: String!
  phone: String!
  restaurants: RestaurantCreateNestedManyWithoutCustomersInput
  token: CustomerTokenCreateNestedManyWithoutCustomerInput
  updatedAt: DateTime
}

input CustomerCreateNestedManyWithoutRestaurantsInput {
  connect: [CustomerWhereUniqueInput!]
  connectOrCreate: [CustomerCreateOrConnectWithoutRestaurantsInput!]
  create: [CustomerCreateWithoutRestaurantsInput!]
}

input CustomerCreateNestedOneWithoutAddressesInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutAddressesInput
  create: CustomerCreateWithoutAddressesInput
}

input CustomerCreateNestedOneWithoutOrdersInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutOrdersInput
  create: CustomerCreateWithoutOrdersInput
}

input CustomerCreateNestedOneWithoutRestaurantReviewInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutRestaurantReviewInput
  create: CustomerCreateWithoutRestaurantReviewInput
}

input CustomerCreateNestedOneWithoutTokenInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutTokenInput
  create: CustomerCreateWithoutTokenInput
}

input CustomerCreateOrConnectWithoutAddressesInput {
  create: CustomerCreateWithoutAddressesInput!
  where: CustomerWhereUniqueInput!
}

input CustomerCreateOrConnectWithoutOrdersInput {
  create: CustomerCreateWithoutOrdersInput!
  where: CustomerWhereUniqueInput!
}

input CustomerCreateOrConnectWithoutRestaurantReviewInput {
  create: CustomerCreateWithoutRestaurantReviewInput!
  where: CustomerWhereUniqueInput!
}

input CustomerCreateOrConnectWithoutRestaurantsInput {
  create: CustomerCreateWithoutRestaurantsInput!
  where: CustomerWhereUniqueInput!
}

input CustomerCreateOrConnectWithoutTokenInput {
  create: CustomerCreateWithoutTokenInput!
  where: CustomerWhereUniqueInput!
}

input CustomerCreateWithoutAddressesInput {
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutCustomerInput
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  orders: OrderCreateNestedManyWithoutCustomerInput
  password: String!
  phone: String!
  restaurants: RestaurantCreateNestedManyWithoutCustomersInput
  token: CustomerTokenCreateNestedManyWithoutCustomerInput
  updatedAt: DateTime
}

input CustomerCreateWithoutOrdersInput {
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutCustomerInput
  addresses: CustomerAddressCreateNestedManyWithoutCustomerInput
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  password: String!
  phone: String!
  restaurants: RestaurantCreateNestedManyWithoutCustomersInput
  token: CustomerTokenCreateNestedManyWithoutCustomerInput
  updatedAt: DateTime
}

input CustomerCreateWithoutRestaurantReviewInput {
  addresses: CustomerAddressCreateNestedManyWithoutCustomerInput
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  orders: OrderCreateNestedManyWithoutCustomerInput
  password: String!
  phone: String!
  restaurants: RestaurantCreateNestedManyWithoutCustomersInput
  token: CustomerTokenCreateNestedManyWithoutCustomerInput
  updatedAt: DateTime
}

input CustomerCreateWithoutRestaurantsInput {
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutCustomerInput
  addresses: CustomerAddressCreateNestedManyWithoutCustomerInput
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  orders: OrderCreateNestedManyWithoutCustomerInput
  password: String!
  phone: String!
  token: CustomerTokenCreateNestedManyWithoutCustomerInput
  updatedAt: DateTime
}

input CustomerCreateWithoutTokenInput {
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutCustomerInput
  addresses: CustomerAddressCreateNestedManyWithoutCustomerInput
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  orders: OrderCreateNestedManyWithoutCustomerInput
  password: String!
  phone: String!
  restaurants: RestaurantCreateNestedManyWithoutCustomersInput
  updatedAt: DateTime
}

input CustomerListRelationFilter {
  every: CustomerWhereInput
  none: CustomerWhereInput
  some: CustomerWhereInput
}

input CustomerOrderByInput {
  createdAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  lastName: SortOrder
  password: SortOrder
  phone: SortOrder
  updatedAt: SortOrder
}

input CustomerScalarWhereInput {
  AND: [CustomerScalarWhereInput!]
  NOT: [CustomerScalarWhereInput!]
  OR: [CustomerScalarWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  password: StringFilter
  phone: StringFilter
  updatedAt: DateTimeFilter
}

type CustomerToken {
  Customer: Customer
  customerId: String
  id: String!
  token: String!
}

input CustomerTokenCreateInput {
  Customer: CustomerCreateNestedOneWithoutTokenInput
  createdAt: DateTime
  id: String
  token: String!
  updatedAt: DateTime
}

input CustomerTokenCreateManyCustomerInput {
  createdAt: DateTime
  id: String
  token: String!
  updatedAt: DateTime
}

input CustomerTokenCreateManyCustomerInputEnvelope {
  data: [CustomerTokenCreateManyCustomerInput!]
  skipDuplicates: Boolean
}

input CustomerTokenCreateNestedManyWithoutCustomerInput {
  connect: [CustomerTokenWhereUniqueInput!]
  connectOrCreate: [CustomerTokenCreateOrConnectWithoutCustomerInput!]
  create: [CustomerTokenCreateWithoutCustomerInput!]
  createMany: CustomerTokenCreateManyCustomerInputEnvelope
}

input CustomerTokenCreateOrConnectWithoutCustomerInput {
  create: CustomerTokenCreateWithoutCustomerInput!
  where: CustomerTokenWhereUniqueInput!
}

input CustomerTokenCreateWithoutCustomerInput {
  createdAt: DateTime
  id: String
  token: String!
  updatedAt: DateTime
}

input CustomerTokenListRelationFilter {
  every: CustomerTokenWhereInput
  none: CustomerTokenWhereInput
  some: CustomerTokenWhereInput
}

input CustomerTokenOrderByInput {
  createdAt: SortOrder
  customerId: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
}

input CustomerTokenScalarWhereInput {
  AND: [CustomerTokenScalarWhereInput!]
  NOT: [CustomerTokenScalarWhereInput!]
  OR: [CustomerTokenScalarWhereInput!]
  createdAt: DateTimeFilter
  customerId: StringNullableFilter
  id: StringFilter
  token: StringFilter
  updatedAt: DateTimeFilter
}

input CustomerTokenUpdateInput {
  Customer: CustomerUpdateOneWithoutTokenInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerTokenUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerTokenUpdateManyWithWhereWithoutCustomerInput {
  data: CustomerTokenUpdateManyMutationInput!
  where: CustomerTokenScalarWhereInput!
}

input CustomerTokenUpdateManyWithoutCustomerInput {
  connect: [CustomerTokenWhereUniqueInput!]
  connectOrCreate: [CustomerTokenCreateOrConnectWithoutCustomerInput!]
  create: [CustomerTokenCreateWithoutCustomerInput!]
  createMany: CustomerTokenCreateManyCustomerInputEnvelope
  delete: [CustomerTokenWhereUniqueInput!]
  deleteMany: [CustomerTokenScalarWhereInput!]
  disconnect: [CustomerTokenWhereUniqueInput!]
  set: [CustomerTokenWhereUniqueInput!]
  update: [CustomerTokenUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [CustomerTokenUpdateManyWithWhereWithoutCustomerInput!]
  upsert: [CustomerTokenUpsertWithWhereUniqueWithoutCustomerInput!]
}

input CustomerTokenUpdateWithWhereUniqueWithoutCustomerInput {
  data: CustomerTokenUpdateWithoutCustomerInput!
  where: CustomerTokenWhereUniqueInput!
}

input CustomerTokenUpdateWithoutCustomerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerTokenUpsertWithWhereUniqueWithoutCustomerInput {
  create: CustomerTokenCreateWithoutCustomerInput!
  update: CustomerTokenUpdateWithoutCustomerInput!
  where: CustomerTokenWhereUniqueInput!
}

input CustomerTokenWhereInput {
  AND: [CustomerTokenWhereInput!]
  Customer: CustomerWhereInput
  NOT: [CustomerTokenWhereInput!]
  OR: [CustomerTokenWhereInput!]
  createdAt: DateTimeFilter
  customerId: StringNullableFilter
  id: StringFilter
  token: StringFilter
  updatedAt: DateTimeFilter
}

input CustomerTokenWhereUniqueInput {
  id: String
}

input CustomerUpdateInput {
  RestaurantReview: RestaurantReviewUpdateManyWithoutCustomerInput
  addresses: CustomerAddressUpdateManyWithoutCustomerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutCustomerInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutCustomersInput
  token: CustomerTokenUpdateManyWithoutCustomerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateManyWithWhereWithoutRestaurantsInput {
  data: CustomerUpdateManyMutationInput!
  where: CustomerScalarWhereInput!
}

input CustomerUpdateManyWithoutRestaurantsInput {
  connect: [CustomerWhereUniqueInput!]
  connectOrCreate: [CustomerCreateOrConnectWithoutRestaurantsInput!]
  create: [CustomerCreateWithoutRestaurantsInput!]
  delete: [CustomerWhereUniqueInput!]
  deleteMany: [CustomerScalarWhereInput!]
  disconnect: [CustomerWhereUniqueInput!]
  set: [CustomerWhereUniqueInput!]
  update: [CustomerUpdateWithWhereUniqueWithoutRestaurantsInput!]
  updateMany: [CustomerUpdateManyWithWhereWithoutRestaurantsInput!]
  upsert: [CustomerUpsertWithWhereUniqueWithoutRestaurantsInput!]
}

input CustomerUpdateOneRequiredWithoutRestaurantReviewInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutRestaurantReviewInput
  create: CustomerCreateWithoutRestaurantReviewInput
  update: CustomerUpdateWithoutRestaurantReviewInput
  upsert: CustomerUpsertWithoutRestaurantReviewInput
}

input CustomerUpdateOneWithoutAddressesInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutAddressesInput
  create: CustomerCreateWithoutAddressesInput
  delete: Boolean
  disconnect: Boolean
  update: CustomerUpdateWithoutAddressesInput
  upsert: CustomerUpsertWithoutAddressesInput
}

input CustomerUpdateOneWithoutOrdersInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutOrdersInput
  create: CustomerCreateWithoutOrdersInput
  delete: Boolean
  disconnect: Boolean
  update: CustomerUpdateWithoutOrdersInput
  upsert: CustomerUpsertWithoutOrdersInput
}

input CustomerUpdateOneWithoutTokenInput {
  connect: CustomerWhereUniqueInput
  connectOrCreate: CustomerCreateOrConnectWithoutTokenInput
  create: CustomerCreateWithoutTokenInput
  delete: Boolean
  disconnect: Boolean
  update: CustomerUpdateWithoutTokenInput
  upsert: CustomerUpsertWithoutTokenInput
}

input CustomerUpdateWithWhereUniqueWithoutRestaurantsInput {
  data: CustomerUpdateWithoutRestaurantsInput!
  where: CustomerWhereUniqueInput!
}

input CustomerUpdateWithoutAddressesInput {
  RestaurantReview: RestaurantReviewUpdateManyWithoutCustomerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutCustomerInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutCustomersInput
  token: CustomerTokenUpdateManyWithoutCustomerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateWithoutOrdersInput {
  RestaurantReview: RestaurantReviewUpdateManyWithoutCustomerInput
  addresses: CustomerAddressUpdateManyWithoutCustomerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutCustomersInput
  token: CustomerTokenUpdateManyWithoutCustomerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateWithoutRestaurantReviewInput {
  addresses: CustomerAddressUpdateManyWithoutCustomerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutCustomerInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutCustomersInput
  token: CustomerTokenUpdateManyWithoutCustomerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateWithoutRestaurantsInput {
  RestaurantReview: RestaurantReviewUpdateManyWithoutCustomerInput
  addresses: CustomerAddressUpdateManyWithoutCustomerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutCustomerInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  token: CustomerTokenUpdateManyWithoutCustomerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateWithoutTokenInput {
  RestaurantReview: RestaurantReviewUpdateManyWithoutCustomerInput
  addresses: CustomerAddressUpdateManyWithoutCustomerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutCustomerInput
  password: StringFieldUpdateOperationsInput
  phone: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutCustomersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpsertWithWhereUniqueWithoutRestaurantsInput {
  create: CustomerCreateWithoutRestaurantsInput!
  update: CustomerUpdateWithoutRestaurantsInput!
  where: CustomerWhereUniqueInput!
}

input CustomerUpsertWithoutAddressesInput {
  create: CustomerCreateWithoutAddressesInput!
  update: CustomerUpdateWithoutAddressesInput!
}

input CustomerUpsertWithoutOrdersInput {
  create: CustomerCreateWithoutOrdersInput!
  update: CustomerUpdateWithoutOrdersInput!
}

input CustomerUpsertWithoutRestaurantReviewInput {
  create: CustomerCreateWithoutRestaurantReviewInput!
  update: CustomerUpdateWithoutRestaurantReviewInput!
}

input CustomerUpsertWithoutTokenInput {
  create: CustomerCreateWithoutTokenInput!
  update: CustomerUpdateWithoutTokenInput!
}

input CustomerWhereInput {
  AND: [CustomerWhereInput!]
  NOT: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  RestaurantReview: RestaurantReviewListRelationFilter
  addresses: CustomerAddressListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  orders: OrderListRelationFilter
  password: StringFilter
  phone: StringFilter
  restaurants: RestaurantListRelationFilter
  token: CustomerTokenListRelationFilter
  updatedAt: DateTimeFilter
}

input CustomerWhereUniqueInput {
  email: String
  id: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

enum DeliveryFee {
  Fixed
  Percent
}

type DeliveryZone {
  Restaurant: Restaurant
  deliveryCharge: Int!
  deliveryFeeType: DeliveryFee!
  id: String!
  maxDeliveryRadius: Int
  minDeliveryAmount: Int
  minDeliveryRadius: Int
  restaurantId: String
  zonePostCode: String
  zoneTitle: String!
}

input DeliveryZoneCreateInput {
  Restaurant: RestaurantCreateNestedOneWithoutDeliveryZonesInput
  createdAt: DateTime
  deliveryCharge: Int
  deliveryFeeType: DeliveryFee
  id: String
  maxDeliveryRadius: Int
  minDeliveryAmount: Int
  minDeliveryRadius: Int
  zonePostCode: String
  zoneTitle: String!
}

input DeliveryZoneCreateManyRestaurantInput {
  createdAt: DateTime
  deliveryCharge: Int
  deliveryFeeType: DeliveryFee
  id: String
  maxDeliveryRadius: Int
  minDeliveryAmount: Int
  minDeliveryRadius: Int
  zonePostCode: String
  zoneTitle: String!
}

input DeliveryZoneCreateManyRestaurantInputEnvelope {
  data: [DeliveryZoneCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input DeliveryZoneCreateNestedManyWithoutRestaurantInput {
  connect: [DeliveryZoneWhereUniqueInput!]
  connectOrCreate: [DeliveryZoneCreateOrConnectWithoutRestaurantInput!]
  create: [DeliveryZoneCreateWithoutRestaurantInput!]
  createMany: DeliveryZoneCreateManyRestaurantInputEnvelope
}

input DeliveryZoneCreateOrConnectWithoutRestaurantInput {
  create: DeliveryZoneCreateWithoutRestaurantInput!
  where: DeliveryZoneWhereUniqueInput!
}

input DeliveryZoneCreateWithoutRestaurantInput {
  createdAt: DateTime
  deliveryCharge: Int
  deliveryFeeType: DeliveryFee
  id: String
  maxDeliveryRadius: Int
  minDeliveryAmount: Int
  minDeliveryRadius: Int
  zonePostCode: String
  zoneTitle: String!
}

input DeliveryZoneListRelationFilter {
  every: DeliveryZoneWhereInput
  none: DeliveryZoneWhereInput
  some: DeliveryZoneWhereInput
}

input DeliveryZoneOrderByInput {
  createdAt: SortOrder
  deliveryCharge: SortOrder
  deliveryFeeType: SortOrder
  id: SortOrder
  maxDeliveryRadius: SortOrder
  minDeliveryAmount: SortOrder
  minDeliveryRadius: SortOrder
  restaurantId: SortOrder
  zonePostCode: SortOrder
  zoneTitle: SortOrder
}

input DeliveryZoneScalarWhereInput {
  AND: [DeliveryZoneScalarWhereInput!]
  NOT: [DeliveryZoneScalarWhereInput!]
  OR: [DeliveryZoneScalarWhereInput!]
  createdAt: DateTimeFilter
  deliveryCharge: IntFilter
  deliveryFeeType: EnumDeliveryFeeFilter
  id: StringFilter
  maxDeliveryRadius: IntNullableFilter
  minDeliveryAmount: IntNullableFilter
  minDeliveryRadius: IntNullableFilter
  restaurantId: StringNullableFilter
  zonePostCode: StringNullableFilter
  zoneTitle: StringFilter
}

input DeliveryZoneUpdateInput {
  Restaurant: RestaurantUpdateOneWithoutDeliveryZonesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharge: IntFieldUpdateOperationsInput
  deliveryFeeType: EnumDeliveryFeeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  maxDeliveryRadius: NullableIntFieldUpdateOperationsInput
  minDeliveryAmount: NullableIntFieldUpdateOperationsInput
  minDeliveryRadius: NullableIntFieldUpdateOperationsInput
  zonePostCode: NullableStringFieldUpdateOperationsInput
  zoneTitle: StringFieldUpdateOperationsInput
}

input DeliveryZoneUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharge: IntFieldUpdateOperationsInput
  deliveryFeeType: EnumDeliveryFeeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  maxDeliveryRadius: NullableIntFieldUpdateOperationsInput
  minDeliveryAmount: NullableIntFieldUpdateOperationsInput
  minDeliveryRadius: NullableIntFieldUpdateOperationsInput
  zonePostCode: NullableStringFieldUpdateOperationsInput
  zoneTitle: StringFieldUpdateOperationsInput
}

input DeliveryZoneUpdateManyWithWhereWithoutRestaurantInput {
  data: DeliveryZoneUpdateManyMutationInput!
  where: DeliveryZoneScalarWhereInput!
}

input DeliveryZoneUpdateManyWithoutRestaurantInput {
  connect: [DeliveryZoneWhereUniqueInput!]
  connectOrCreate: [DeliveryZoneCreateOrConnectWithoutRestaurantInput!]
  create: [DeliveryZoneCreateWithoutRestaurantInput!]
  createMany: DeliveryZoneCreateManyRestaurantInputEnvelope
  delete: [DeliveryZoneWhereUniqueInput!]
  deleteMany: [DeliveryZoneScalarWhereInput!]
  disconnect: [DeliveryZoneWhereUniqueInput!]
  set: [DeliveryZoneWhereUniqueInput!]
  update: [DeliveryZoneUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [DeliveryZoneUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [DeliveryZoneUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input DeliveryZoneUpdateWithWhereUniqueWithoutRestaurantInput {
  data: DeliveryZoneUpdateWithoutRestaurantInput!
  where: DeliveryZoneWhereUniqueInput!
}

input DeliveryZoneUpdateWithoutRestaurantInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharge: IntFieldUpdateOperationsInput
  deliveryFeeType: EnumDeliveryFeeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  maxDeliveryRadius: NullableIntFieldUpdateOperationsInput
  minDeliveryAmount: NullableIntFieldUpdateOperationsInput
  minDeliveryRadius: NullableIntFieldUpdateOperationsInput
  zonePostCode: NullableStringFieldUpdateOperationsInput
  zoneTitle: StringFieldUpdateOperationsInput
}

input DeliveryZoneUpsertWithWhereUniqueWithoutRestaurantInput {
  create: DeliveryZoneCreateWithoutRestaurantInput!
  update: DeliveryZoneUpdateWithoutRestaurantInput!
  where: DeliveryZoneWhereUniqueInput!
}

input DeliveryZoneWhereInput {
  AND: [DeliveryZoneWhereInput!]
  NOT: [DeliveryZoneWhereInput!]
  OR: [DeliveryZoneWhereInput!]
  Restaurant: RestaurantWhereInput
  createdAt: DateTimeFilter
  deliveryCharge: IntFilter
  deliveryFeeType: EnumDeliveryFeeFilter
  id: StringFilter
  maxDeliveryRadius: IntNullableFilter
  minDeliveryAmount: IntNullableFilter
  minDeliveryRadius: IntNullableFilter
  restaurantId: StringNullableFilter
  zonePostCode: StringNullableFilter
  zoneTitle: StringFilter
}

input DeliveryZoneWhereUniqueInput {
  id: String
}

enum Discount {
  Fixed
  Percent
}

input EnumDeliveryFeeFieldUpdateOperationsInput {
  set: DeliveryFee
}

input EnumDeliveryFeeFilter {
  equals: DeliveryFee
  in: [DeliveryFee!]
  not: NestedEnumDeliveryFeeFilter
  notIn: [DeliveryFee!]
}

input EnumDiscountFieldUpdateOperationsInput {
  set: Discount
}

input EnumDiscountFilter {
  equals: Discount
  in: [Discount!]
  not: NestedEnumDiscountFilter
  notIn: [Discount!]
}

input EnumRoleFieldUpdateOperationsInput {
  set: Role
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input EnumSpiceLevelFieldUpdateOperationsInput {
  set: SpiceLevel
}

input EnumSpiceLevelFilter {
  equals: SpiceLevel
  in: [SpiceLevel!]
  not: NestedEnumSpiceLevelFilter
  notIn: [SpiceLevel!]
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createCMSAbout(data: CMSAboutCreateInput!): CMSAbout!
  createCMSContact(data: CMSContactCreateInput!): CMSContact!
  createCMSHome(data: CMSHomeCreateInput!): CMSHome!
  createCMSReservation(data: CMSReservationCreateInput!): CMSReservation!
  createCMSReview(data: CMSReviewCreateInput!): CMSReview!
  createCoupon(data: CouponCreateInput!): Coupon!
  createCustomer(data: CustomerCreateInput!): Customer!
  createCustomerAddress(data: CustomerAddressCreateInput!): CustomerAddress!
  createCustomerToken(data: CustomerTokenCreateInput!): CustomerToken!
  createDeliveryZone(data: DeliveryZoneCreateInput!): DeliveryZone!
  createOrder(data: OrderCreateInput!): Order!
  createOrderItem(data: OrderItemCreateInput!): OrderItem!
  createProduct(data: ProductCreateInput!): Product!
  createProductCategory(data: ProductCategoryCreateInput!): ProductCategory!
  createRestaurant(data: RestaurantCreateInput!): Restaurant!
  createRestaurantConfig(data: RestaurantConfigCreateInput!): RestaurantConfig!
  createRestaurantPlan(data: RestaurantPlanCreateInput!): RestaurantPlan!
  createRestaurantReview(data: RestaurantReviewCreateInput!): RestaurantReview!
  createRestaurantSocial(data: RestaurantSocialCreateInput!): RestaurantSocial!
  createSchedule(data: ScheduleCreateInput!): Schedule!
  createUser(data: UserCreateInput!): User!
  createUserToken(data: UserTokenCreateInput!): UserToken!
  deleteCMSAbout(where: CMSAboutWhereUniqueInput!): CMSAbout
  deleteCMSContact(where: CMSContactWhereUniqueInput!): CMSContact
  deleteCMSHome(where: CMSHomeWhereUniqueInput!): CMSHome
  deleteCMSReservation(where: CMSReservationWhereUniqueInput!): CMSReservation
  deleteCMSReview(where: CMSReviewWhereUniqueInput!): CMSReview
  deleteCoupon(where: CouponWhereUniqueInput!): Coupon
  deleteCustomer(where: CustomerWhereUniqueInput!): Customer
  deleteCustomerAddress(where: CustomerAddressWhereUniqueInput!): CustomerAddress
  deleteCustomerToken(where: CustomerTokenWhereUniqueInput!): CustomerToken
  deleteDeliveryZone(where: DeliveryZoneWhereUniqueInput!): DeliveryZone
  deleteOrder(where: OrderWhereUniqueInput!): Order
  deleteOrderItem(where: OrderItemWhereUniqueInput!): OrderItem
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteProductCategory(where: ProductCategoryWhereUniqueInput!): ProductCategory
  deleteRestaurant(where: RestaurantWhereUniqueInput!): Restaurant
  deleteRestaurantConfig(where: RestaurantConfigWhereUniqueInput!): RestaurantConfig
  deleteRestaurantPlan(where: RestaurantPlanWhereUniqueInput!): RestaurantPlan
  deleteRestaurantReview(where: RestaurantReviewWhereUniqueInput!): RestaurantReview
  deleteRestaurantSocial(where: RestaurantSocialWhereUniqueInput!): RestaurantSocial
  deleteSchedule(where: ScheduleWhereUniqueInput!): Schedule
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUserToken(where: UserTokenWhereUniqueInput!): UserToken
  updateCMSAbout(data: CMSAboutUpdateInput!, where: CMSAboutWhereUniqueInput!): CMSAbout
  updateCMSContact(data: CMSContactUpdateInput!, where: CMSContactWhereUniqueInput!): CMSContact
  updateCMSHome(data: CMSHomeUpdateInput!, where: CMSHomeWhereUniqueInput!): CMSHome
  updateCMSReservation(data: CMSReservationUpdateInput!, where: CMSReservationWhereUniqueInput!): CMSReservation
  updateCMSReview(data: CMSReviewUpdateInput!, where: CMSReviewWhereUniqueInput!): CMSReview
  updateCoupon(data: CouponUpdateInput!, where: CouponWhereUniqueInput!): Coupon
  updateCustomer(data: CustomerUpdateInput!, where: CustomerWhereUniqueInput!): Customer
  updateCustomerAddress(data: CustomerAddressUpdateInput!, where: CustomerAddressWhereUniqueInput!): CustomerAddress
  updateCustomerToken(data: CustomerTokenUpdateInput!, where: CustomerTokenWhereUniqueInput!): CustomerToken
  updateDeliveryZone(data: DeliveryZoneUpdateInput!, where: DeliveryZoneWhereUniqueInput!): DeliveryZone
  updateOrder(data: OrderUpdateInput!, where: OrderWhereUniqueInput!): Order
  updateOrderItem(data: OrderItemUpdateInput!, where: OrderItemWhereUniqueInput!): OrderItem
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateProductCategory(data: ProductCategoryUpdateInput!, where: ProductCategoryWhereUniqueInput!): ProductCategory
  updateRestaurant(data: RestaurantUpdateInput!, where: RestaurantWhereUniqueInput!): Restaurant
  updateRestaurantConfig(data: RestaurantConfigUpdateInput!, where: RestaurantConfigWhereUniqueInput!): RestaurantConfig
  updateRestaurantPlan(data: RestaurantPlanUpdateInput!, where: RestaurantPlanWhereUniqueInput!): RestaurantPlan
  updateRestaurantReview(data: RestaurantReviewUpdateInput!, where: RestaurantReviewWhereUniqueInput!): RestaurantReview
  updateRestaurantSocial(data: RestaurantSocialUpdateInput!, where: RestaurantSocialWhereUniqueInput!): RestaurantSocial
  updateSchedule(data: ScheduleUpdateInput!, where: ScheduleWhereUniqueInput!): Schedule
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateUserToken(data: UserTokenUpdateInput!, where: UserTokenWhereUniqueInput!): UserToken
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumDeliveryFeeFilter {
  equals: DeliveryFee
  in: [DeliveryFee!]
  not: NestedEnumDeliveryFeeFilter
  notIn: [DeliveryFee!]
}

input NestedEnumDiscountFilter {
  equals: Discount
  in: [Discount!]
  not: NestedEnumDiscountFilter
  notIn: [Discount!]
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input NestedEnumSpiceLevelFilter {
  equals: SpiceLevel
  in: [SpiceLevel!]
  not: NestedEnumSpiceLevelFilter
  notIn: [SpiceLevel!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Order {
  Coupon: Coupon
  Customer: Customer
  address: String
  couponId: String
  customerId: String
  deliveryCharges: Float!
  discount: Float!
  id: Int!
  isAccepted: Boolean!
  items(after: OrderItemWhereUniqueInput, before: OrderItemWhereUniqueInput, first: Int, last: Int): [OrderItem!]!
  restaurant: Restaurant!
  restaurantId: String!
  serviceCharge: Float!
  total: Float!
  vat: Float!
}

input OrderCreateInput {
  Coupon: CouponCreateNestedOneWithoutOrdersInput
  Customer: CustomerCreateNestedOneWithoutOrdersInput
  address: String
  createdAt: DateTime
  deliveryCharges: Float!
  discount: Float!
  isAccepted: Boolean!
  items: OrderItemCreateNestedManyWithoutOrderInput
  restaurant: RestaurantCreateNestedOneWithoutOrdersInput!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateManyCouponInput {
  address: String
  createdAt: DateTime
  customerId: String
  deliveryCharges: Float!
  discount: Float!
  id: Int
  isAccepted: Boolean!
  restaurantId: String!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateManyCouponInputEnvelope {
  data: [OrderCreateManyCouponInput!]
  skipDuplicates: Boolean
}

input OrderCreateManyCustomerInput {
  address: String
  couponId: String
  createdAt: DateTime
  deliveryCharges: Float!
  discount: Float!
  id: Int
  isAccepted: Boolean!
  restaurantId: String!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateManyCustomerInputEnvelope {
  data: [OrderCreateManyCustomerInput!]
  skipDuplicates: Boolean
}

input OrderCreateManyRestaurantInput {
  address: String
  couponId: String
  createdAt: DateTime
  customerId: String
  deliveryCharges: Float!
  discount: Float!
  id: Int
  isAccepted: Boolean!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateManyRestaurantInputEnvelope {
  data: [OrderCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input OrderCreateNestedManyWithoutCouponInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutCouponInput!]
  create: [OrderCreateWithoutCouponInput!]
  createMany: OrderCreateManyCouponInputEnvelope
}

input OrderCreateNestedManyWithoutCustomerInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutCustomerInput!]
  create: [OrderCreateWithoutCustomerInput!]
  createMany: OrderCreateManyCustomerInputEnvelope
}

input OrderCreateNestedManyWithoutRestaurantInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutRestaurantInput!]
  create: [OrderCreateWithoutRestaurantInput!]
  createMany: OrderCreateManyRestaurantInputEnvelope
}

input OrderCreateNestedOneWithoutItemsInput {
  connect: OrderWhereUniqueInput
  connectOrCreate: OrderCreateOrConnectWithoutItemsInput
  create: OrderCreateWithoutItemsInput
}

input OrderCreateOrConnectWithoutCouponInput {
  create: OrderCreateWithoutCouponInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateOrConnectWithoutCustomerInput {
  create: OrderCreateWithoutCustomerInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateOrConnectWithoutItemsInput {
  create: OrderCreateWithoutItemsInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateOrConnectWithoutRestaurantInput {
  create: OrderCreateWithoutRestaurantInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateWithoutCouponInput {
  Customer: CustomerCreateNestedOneWithoutOrdersInput
  address: String
  createdAt: DateTime
  deliveryCharges: Float!
  discount: Float!
  isAccepted: Boolean!
  items: OrderItemCreateNestedManyWithoutOrderInput
  restaurant: RestaurantCreateNestedOneWithoutOrdersInput!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateWithoutCustomerInput {
  Coupon: CouponCreateNestedOneWithoutOrdersInput
  address: String
  createdAt: DateTime
  deliveryCharges: Float!
  discount: Float!
  isAccepted: Boolean!
  items: OrderItemCreateNestedManyWithoutOrderInput
  restaurant: RestaurantCreateNestedOneWithoutOrdersInput!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateWithoutItemsInput {
  Coupon: CouponCreateNestedOneWithoutOrdersInput
  Customer: CustomerCreateNestedOneWithoutOrdersInput
  address: String
  createdAt: DateTime
  deliveryCharges: Float!
  discount: Float!
  isAccepted: Boolean!
  restaurant: RestaurantCreateNestedOneWithoutOrdersInput!
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

input OrderCreateWithoutRestaurantInput {
  Coupon: CouponCreateNestedOneWithoutOrdersInput
  Customer: CustomerCreateNestedOneWithoutOrdersInput
  address: String
  createdAt: DateTime
  deliveryCharges: Float!
  discount: Float!
  isAccepted: Boolean!
  items: OrderItemCreateNestedManyWithoutOrderInput
  serviceCharge: Float!
  total: Float!
  updatedAt: DateTime
  vat: Float!
}

type OrderItem {
  Order: Order
  Restaurant: Restaurant
  id: String!
  orderId: Int
  product: Product!
  productId: String!
  quantity: Int!
  restaurantId: String
  spiceLevel: SpiceLevel!
  total: Int!
}

input OrderItemCreateInput {
  Order: OrderCreateNestedOneWithoutItemsInput
  Restaurant: RestaurantCreateNestedOneWithoutOrderItemsInput
  createdAt: DateTime
  id: String
  product: ProductCreateNestedOneWithoutOrderItemInput!
  quantity: Int
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateManyOrderInput {
  createdAt: DateTime
  id: String
  productId: String!
  quantity: Int
  restaurantId: String
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateManyOrderInputEnvelope {
  data: [OrderItemCreateManyOrderInput!]
  skipDuplicates: Boolean
}

input OrderItemCreateManyProductInput {
  createdAt: DateTime
  id: String
  orderId: Int
  quantity: Int
  restaurantId: String
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateManyProductInputEnvelope {
  data: [OrderItemCreateManyProductInput!]
  skipDuplicates: Boolean
}

input OrderItemCreateManyRestaurantInput {
  createdAt: DateTime
  id: String
  orderId: Int
  productId: String!
  quantity: Int
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateManyRestaurantInputEnvelope {
  data: [OrderItemCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input OrderItemCreateNestedManyWithoutOrderInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutOrderInput!]
  create: [OrderItemCreateWithoutOrderInput!]
  createMany: OrderItemCreateManyOrderInputEnvelope
}

input OrderItemCreateNestedManyWithoutProductInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutProductInput!]
  create: [OrderItemCreateWithoutProductInput!]
  createMany: OrderItemCreateManyProductInputEnvelope
}

input OrderItemCreateNestedManyWithoutRestaurantInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutRestaurantInput!]
  create: [OrderItemCreateWithoutRestaurantInput!]
  createMany: OrderItemCreateManyRestaurantInputEnvelope
}

input OrderItemCreateOrConnectWithoutOrderInput {
  create: OrderItemCreateWithoutOrderInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateOrConnectWithoutProductInput {
  create: OrderItemCreateWithoutProductInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateOrConnectWithoutRestaurantInput {
  create: OrderItemCreateWithoutRestaurantInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateWithoutOrderInput {
  Restaurant: RestaurantCreateNestedOneWithoutOrderItemsInput
  createdAt: DateTime
  id: String
  product: ProductCreateNestedOneWithoutOrderItemInput!
  quantity: Int
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateWithoutProductInput {
  Order: OrderCreateNestedOneWithoutItemsInput
  Restaurant: RestaurantCreateNestedOneWithoutOrderItemsInput
  createdAt: DateTime
  id: String
  quantity: Int
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemCreateWithoutRestaurantInput {
  Order: OrderCreateNestedOneWithoutItemsInput
  createdAt: DateTime
  id: String
  product: ProductCreateNestedOneWithoutOrderItemInput!
  quantity: Int
  spiceLevel: SpiceLevel
  total: Int!
  updatedAt: DateTime
}

input OrderItemListRelationFilter {
  every: OrderItemWhereInput
  none: OrderItemWhereInput
  some: OrderItemWhereInput
}

input OrderItemOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  orderId: SortOrder
  productId: SortOrder
  quantity: SortOrder
  restaurantId: SortOrder
  spiceLevel: SortOrder
  total: SortOrder
  updatedAt: SortOrder
}

input OrderItemScalarWhereInput {
  AND: [OrderItemScalarWhereInput!]
  NOT: [OrderItemScalarWhereInput!]
  OR: [OrderItemScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  orderId: IntNullableFilter
  productId: StringFilter
  quantity: IntFilter
  restaurantId: StringNullableFilter
  spiceLevel: EnumSpiceLevelFilter
  total: IntFilter
  updatedAt: DateTimeFilter
}

input OrderItemUpdateInput {
  Order: OrderUpdateOneWithoutItemsInput
  Restaurant: RestaurantUpdateOneWithoutOrderItemsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutOrderItemInput
  quantity: IntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpdateManyWithWhereWithoutOrderInput {
  data: OrderItemUpdateManyMutationInput!
  where: OrderItemScalarWhereInput!
}

input OrderItemUpdateManyWithWhereWithoutProductInput {
  data: OrderItemUpdateManyMutationInput!
  where: OrderItemScalarWhereInput!
}

input OrderItemUpdateManyWithWhereWithoutRestaurantInput {
  data: OrderItemUpdateManyMutationInput!
  where: OrderItemScalarWhereInput!
}

input OrderItemUpdateManyWithoutOrderInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutOrderInput!]
  create: [OrderItemCreateWithoutOrderInput!]
  createMany: OrderItemCreateManyOrderInputEnvelope
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutOrderInput!]
  updateMany: [OrderItemUpdateManyWithWhereWithoutOrderInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutOrderInput!]
}

input OrderItemUpdateManyWithoutProductInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutProductInput!]
  create: [OrderItemCreateWithoutProductInput!]
  createMany: OrderItemCreateManyProductInputEnvelope
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [OrderItemUpdateManyWithWhereWithoutProductInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutProductInput!]
}

input OrderItemUpdateManyWithoutRestaurantInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutRestaurantInput!]
  create: [OrderItemCreateWithoutRestaurantInput!]
  createMany: OrderItemCreateManyRestaurantInputEnvelope
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [OrderItemUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input OrderItemUpdateWithWhereUniqueWithoutOrderInput {
  data: OrderItemUpdateWithoutOrderInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithWhereUniqueWithoutProductInput {
  data: OrderItemUpdateWithoutProductInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithWhereUniqueWithoutRestaurantInput {
  data: OrderItemUpdateWithoutRestaurantInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithoutOrderInput {
  Restaurant: RestaurantUpdateOneWithoutOrderItemsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutOrderItemInput
  quantity: IntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpdateWithoutProductInput {
  Order: OrderUpdateOneWithoutItemsInput
  Restaurant: RestaurantUpdateOneWithoutOrderItemsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpdateWithoutRestaurantInput {
  Order: OrderUpdateOneWithoutItemsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutOrderItemInput
  quantity: IntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpsertWithWhereUniqueWithoutOrderInput {
  create: OrderItemCreateWithoutOrderInput!
  update: OrderItemUpdateWithoutOrderInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithWhereUniqueWithoutProductInput {
  create: OrderItemCreateWithoutProductInput!
  update: OrderItemUpdateWithoutProductInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithWhereUniqueWithoutRestaurantInput {
  create: OrderItemCreateWithoutRestaurantInput!
  update: OrderItemUpdateWithoutRestaurantInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemWhereInput {
  AND: [OrderItemWhereInput!]
  NOT: [OrderItemWhereInput!]
  OR: [OrderItemWhereInput!]
  Order: OrderWhereInput
  Restaurant: RestaurantWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  orderId: IntNullableFilter
  product: ProductWhereInput
  productId: StringFilter
  quantity: IntFilter
  restaurantId: StringNullableFilter
  spiceLevel: EnumSpiceLevelFilter
  total: IntFilter
  updatedAt: DateTimeFilter
}

input OrderItemWhereUniqueInput {
  id: String
}

input OrderListRelationFilter {
  every: OrderWhereInput
  none: OrderWhereInput
  some: OrderWhereInput
}

input OrderOrderByInput {
  address: SortOrder
  couponId: SortOrder
  createdAt: SortOrder
  customerId: SortOrder
  deliveryCharges: SortOrder
  discount: SortOrder
  id: SortOrder
  isAccepted: SortOrder
  restaurantId: SortOrder
  serviceCharge: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  vat: SortOrder
}

input OrderScalarWhereInput {
  AND: [OrderScalarWhereInput!]
  NOT: [OrderScalarWhereInput!]
  OR: [OrderScalarWhereInput!]
  address: StringNullableFilter
  couponId: StringNullableFilter
  createdAt: DateTimeFilter
  customerId: StringNullableFilter
  deliveryCharges: FloatFilter
  discount: FloatFilter
  id: IntFilter
  isAccepted: BoolFilter
  restaurantId: StringFilter
  serviceCharge: FloatFilter
  total: FloatFilter
  updatedAt: DateTimeFilter
  vat: FloatFilter
}

input OrderUpdateInput {
  Coupon: CouponUpdateOneWithoutOrdersInput
  Customer: CustomerUpdateOneWithoutOrdersInput
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharges: FloatFieldUpdateOperationsInput
  discount: FloatFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  items: OrderItemUpdateManyWithoutOrderInput
  restaurant: RestaurantUpdateOneRequiredWithoutOrdersInput
  serviceCharge: FloatFieldUpdateOperationsInput
  total: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vat: FloatFieldUpdateOperationsInput
}

input OrderUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharges: FloatFieldUpdateOperationsInput
  discount: FloatFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  serviceCharge: FloatFieldUpdateOperationsInput
  total: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vat: FloatFieldUpdateOperationsInput
}

input OrderUpdateManyWithWhereWithoutCouponInput {
  data: OrderUpdateManyMutationInput!
  where: OrderScalarWhereInput!
}

input OrderUpdateManyWithWhereWithoutCustomerInput {
  data: OrderUpdateManyMutationInput!
  where: OrderScalarWhereInput!
}

input OrderUpdateManyWithWhereWithoutRestaurantInput {
  data: OrderUpdateManyMutationInput!
  where: OrderScalarWhereInput!
}

input OrderUpdateManyWithoutCouponInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutCouponInput!]
  create: [OrderCreateWithoutCouponInput!]
  createMany: OrderCreateManyCouponInputEnvelope
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutCouponInput!]
  updateMany: [OrderUpdateManyWithWhereWithoutCouponInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutCouponInput!]
}

input OrderUpdateManyWithoutCustomerInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutCustomerInput!]
  create: [OrderCreateWithoutCustomerInput!]
  createMany: OrderCreateManyCustomerInputEnvelope
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [OrderUpdateManyWithWhereWithoutCustomerInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutCustomerInput!]
}

input OrderUpdateManyWithoutRestaurantInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutRestaurantInput!]
  create: [OrderCreateWithoutRestaurantInput!]
  createMany: OrderCreateManyRestaurantInputEnvelope
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [OrderUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input OrderUpdateOneWithoutItemsInput {
  connect: OrderWhereUniqueInput
  connectOrCreate: OrderCreateOrConnectWithoutItemsInput
  create: OrderCreateWithoutItemsInput
  delete: Boolean
  disconnect: Boolean
  update: OrderUpdateWithoutItemsInput
  upsert: OrderUpsertWithoutItemsInput
}

input OrderUpdateWithWhereUniqueWithoutCouponInput {
  data: OrderUpdateWithoutCouponInput!
  where: OrderWhereUniqueInput!
}

input OrderUpdateWithWhereUniqueWithoutCustomerInput {
  data: OrderUpdateWithoutCustomerInput!
  where: OrderWhereUniqueInput!
}

input OrderUpdateWithWhereUniqueWithoutRestaurantInput {
  data: OrderUpdateWithoutRestaurantInput!
  where: OrderWhereUniqueInput!
}

input OrderUpdateWithoutCouponInput {
  Customer: CustomerUpdateOneWithoutOrdersInput
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharges: FloatFieldUpdateOperationsInput
  discount: FloatFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  items: OrderItemUpdateManyWithoutOrderInput
  restaurant: RestaurantUpdateOneRequiredWithoutOrdersInput
  serviceCharge: FloatFieldUpdateOperationsInput
  total: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vat: FloatFieldUpdateOperationsInput
}

input OrderUpdateWithoutCustomerInput {
  Coupon: CouponUpdateOneWithoutOrdersInput
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharges: FloatFieldUpdateOperationsInput
  discount: FloatFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  items: OrderItemUpdateManyWithoutOrderInput
  restaurant: RestaurantUpdateOneRequiredWithoutOrdersInput
  serviceCharge: FloatFieldUpdateOperationsInput
  total: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vat: FloatFieldUpdateOperationsInput
}

input OrderUpdateWithoutItemsInput {
  Coupon: CouponUpdateOneWithoutOrdersInput
  Customer: CustomerUpdateOneWithoutOrdersInput
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharges: FloatFieldUpdateOperationsInput
  discount: FloatFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutOrdersInput
  serviceCharge: FloatFieldUpdateOperationsInput
  total: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vat: FloatFieldUpdateOperationsInput
}

input OrderUpdateWithoutRestaurantInput {
  Coupon: CouponUpdateOneWithoutOrdersInput
  Customer: CustomerUpdateOneWithoutOrdersInput
  address: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  deliveryCharges: FloatFieldUpdateOperationsInput
  discount: FloatFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  items: OrderItemUpdateManyWithoutOrderInput
  serviceCharge: FloatFieldUpdateOperationsInput
  total: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vat: FloatFieldUpdateOperationsInput
}

input OrderUpsertWithWhereUniqueWithoutCouponInput {
  create: OrderCreateWithoutCouponInput!
  update: OrderUpdateWithoutCouponInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutCustomerInput {
  create: OrderCreateWithoutCustomerInput!
  update: OrderUpdateWithoutCustomerInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithWhereUniqueWithoutRestaurantInput {
  create: OrderCreateWithoutRestaurantInput!
  update: OrderUpdateWithoutRestaurantInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithoutItemsInput {
  create: OrderCreateWithoutItemsInput!
  update: OrderUpdateWithoutItemsInput!
}

input OrderWhereInput {
  AND: [OrderWhereInput!]
  Coupon: CouponWhereInput
  Customer: CustomerWhereInput
  NOT: [OrderWhereInput!]
  OR: [OrderWhereInput!]
  address: StringNullableFilter
  couponId: StringNullableFilter
  createdAt: DateTimeFilter
  customerId: StringNullableFilter
  deliveryCharges: FloatFilter
  discount: FloatFilter
  id: IntFilter
  isAccepted: BoolFilter
  items: OrderItemListRelationFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
  serviceCharge: FloatFilter
  total: FloatFilter
  updatedAt: DateTimeFilter
  vat: FloatFilter
}

input OrderWhereUniqueInput {
  id: Int
}

type Product {
  OrderItem(after: OrderItemWhereUniqueInput, before: OrderItemWhereUniqueInput, first: Int, last: Int): [OrderItem!]!
  ProductCategory: ProductCategory
  Restaurant: Restaurant
  description: String
  id: String!
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  productCategoryId: String
  restaurantId: String
  spiceLevel: SpiceLevel!
}

type ProductCategory {
  Product(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int): [Product!]!
  description: String
  id: String!
  image: String
  isActive: Boolean
  isFeatured: Boolean
  name: String!
  restaurantId: String!
  restaurants: Restaurant!
}

input ProductCategoryCreateInput {
  Product: ProductCreateNestedManyWithoutProductCategoryInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isFeatured: Boolean
  name: String!
  restaurants: RestaurantCreateNestedOneWithoutProductCategoryInput!
}

input ProductCategoryCreateManyRestaurantsInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isFeatured: Boolean
  name: String!
}

input ProductCategoryCreateManyRestaurantsInputEnvelope {
  data: [ProductCategoryCreateManyRestaurantsInput!]
  skipDuplicates: Boolean
}

input ProductCategoryCreateNestedManyWithoutRestaurantsInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutRestaurantsInput!]
  create: [ProductCategoryCreateWithoutRestaurantsInput!]
  createMany: ProductCategoryCreateManyRestaurantsInputEnvelope
}

input ProductCategoryCreateNestedOneWithoutProductInput {
  connect: ProductCategoryWhereUniqueInput
  connectOrCreate: ProductCategoryCreateOrConnectWithoutProductInput
  create: ProductCategoryCreateWithoutProductInput
}

input ProductCategoryCreateOrConnectWithoutProductInput {
  create: ProductCategoryCreateWithoutProductInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryCreateOrConnectWithoutRestaurantsInput {
  create: ProductCategoryCreateWithoutRestaurantsInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryCreateWithoutProductInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isFeatured: Boolean
  name: String!
  restaurants: RestaurantCreateNestedOneWithoutProductCategoryInput!
}

input ProductCategoryCreateWithoutRestaurantsInput {
  Product: ProductCreateNestedManyWithoutProductCategoryInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isFeatured: Boolean
  name: String!
}

input ProductCategoryListRelationFilter {
  every: ProductCategoryWhereInput
  none: ProductCategoryWhereInput
  some: ProductCategoryWhereInput
}

input ProductCategoryOrderByInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isActive: SortOrder
  isFeatured: SortOrder
  name: SortOrder
  restaurantId: SortOrder
}

input ProductCategoryScalarWhereInput {
  AND: [ProductCategoryScalarWhereInput!]
  NOT: [ProductCategoryScalarWhereInput!]
  OR: [ProductCategoryScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  image: StringNullableFilter
  isActive: BoolNullableFilter
  isFeatured: BoolNullableFilter
  name: StringFilter
  restaurantId: StringFilter
}

input ProductCategoryUpdateInput {
  Product: ProductUpdateManyWithoutProductCategoryInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isFeatured: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateOneRequiredWithoutProductCategoryInput
}

input ProductCategoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isFeatured: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductCategoryUpdateManyWithWhereWithoutRestaurantsInput {
  data: ProductCategoryUpdateManyMutationInput!
  where: ProductCategoryScalarWhereInput!
}

input ProductCategoryUpdateManyWithoutRestaurantsInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutRestaurantsInput!]
  create: [ProductCategoryCreateWithoutRestaurantsInput!]
  createMany: ProductCategoryCreateManyRestaurantsInputEnvelope
  delete: [ProductCategoryWhereUniqueInput!]
  deleteMany: [ProductCategoryScalarWhereInput!]
  disconnect: [ProductCategoryWhereUniqueInput!]
  set: [ProductCategoryWhereUniqueInput!]
  update: [ProductCategoryUpdateWithWhereUniqueWithoutRestaurantsInput!]
  updateMany: [ProductCategoryUpdateManyWithWhereWithoutRestaurantsInput!]
  upsert: [ProductCategoryUpsertWithWhereUniqueWithoutRestaurantsInput!]
}

input ProductCategoryUpdateOneWithoutProductInput {
  connect: ProductCategoryWhereUniqueInput
  connectOrCreate: ProductCategoryCreateOrConnectWithoutProductInput
  create: ProductCategoryCreateWithoutProductInput
  delete: Boolean
  disconnect: Boolean
  update: ProductCategoryUpdateWithoutProductInput
  upsert: ProductCategoryUpsertWithoutProductInput
}

input ProductCategoryUpdateWithWhereUniqueWithoutRestaurantsInput {
  data: ProductCategoryUpdateWithoutRestaurantsInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpdateWithoutProductInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isFeatured: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateOneRequiredWithoutProductCategoryInput
}

input ProductCategoryUpdateWithoutRestaurantsInput {
  Product: ProductUpdateManyWithoutProductCategoryInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isFeatured: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductCategoryUpsertWithWhereUniqueWithoutRestaurantsInput {
  create: ProductCategoryCreateWithoutRestaurantsInput!
  update: ProductCategoryUpdateWithoutRestaurantsInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpsertWithoutProductInput {
  create: ProductCategoryCreateWithoutProductInput!
  update: ProductCategoryUpdateWithoutProductInput!
}

input ProductCategoryWhereInput {
  AND: [ProductCategoryWhereInput!]
  NOT: [ProductCategoryWhereInput!]
  OR: [ProductCategoryWhereInput!]
  Product: ProductListRelationFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  image: StringNullableFilter
  isActive: BoolNullableFilter
  isFeatured: BoolNullableFilter
  name: StringFilter
  restaurantId: StringFilter
  restaurants: RestaurantWhereInput
}

input ProductCategoryWhereUniqueInput {
  id: String
}

input ProductCreateInput {
  OrderItem: OrderItemCreateNestedManyWithoutProductInput
  ProductCategory: ProductCategoryCreateNestedOneWithoutProductInput
  Restaurant: RestaurantCreateNestedOneWithoutProductsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  spiceLevel: SpiceLevel
}

input ProductCreateManyProductCategoryInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  restaurantId: String
  spiceLevel: SpiceLevel
}

input ProductCreateManyProductCategoryInputEnvelope {
  data: [ProductCreateManyProductCategoryInput!]
  skipDuplicates: Boolean
}

input ProductCreateManyRestaurantInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  productCategoryId: String
  spiceLevel: SpiceLevel
}

input ProductCreateManyRestaurantInputEnvelope {
  data: [ProductCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input ProductCreateNestedManyWithoutProductCategoryInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutProductCategoryInput!]
  create: [ProductCreateWithoutProductCategoryInput!]
  createMany: ProductCreateManyProductCategoryInputEnvelope
}

input ProductCreateNestedManyWithoutRestaurantInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutRestaurantInput!]
  create: [ProductCreateWithoutRestaurantInput!]
  createMany: ProductCreateManyRestaurantInputEnvelope
}

input ProductCreateNestedOneWithoutOrderItemInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutOrderItemInput
  create: ProductCreateWithoutOrderItemInput
}

input ProductCreateOrConnectWithoutOrderItemInput {
  create: ProductCreateWithoutOrderItemInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutProductCategoryInput {
  create: ProductCreateWithoutProductCategoryInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutRestaurantInput {
  create: ProductCreateWithoutRestaurantInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateWithoutOrderItemInput {
  ProductCategory: ProductCategoryCreateNestedOneWithoutProductInput
  Restaurant: RestaurantCreateNestedOneWithoutProductsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  spiceLevel: SpiceLevel
}

input ProductCreateWithoutProductCategoryInput {
  OrderItem: OrderItemCreateNestedManyWithoutProductInput
  Restaurant: RestaurantCreateNestedOneWithoutProductsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  spiceLevel: SpiceLevel
}

input ProductCreateWithoutRestaurantInput {
  OrderItem: OrderItemCreateNestedManyWithoutProductInput
  ProductCategory: ProductCategoryCreateNestedOneWithoutProductInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  isActive: Boolean
  isPopular: Boolean
  name: String!
  price: Int
  spiceLevel: SpiceLevel
}

input ProductListRelationFilter {
  every: ProductWhereInput
  none: ProductWhereInput
  some: ProductWhereInput
}

input ProductScalarWhereInput {
  AND: [ProductScalarWhereInput!]
  NOT: [ProductScalarWhereInput!]
  OR: [ProductScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  image: StringNullableFilter
  isActive: BoolNullableFilter
  isPopular: BoolNullableFilter
  name: StringFilter
  price: IntNullableFilter
  productCategoryId: StringNullableFilter
  restaurantId: StringNullableFilter
  spiceLevel: EnumSpiceLevelFilter
}

input ProductUpdateInput {
  OrderItem: OrderItemUpdateManyWithoutProductInput
  ProductCategory: ProductCategoryUpdateOneWithoutProductInput
  Restaurant: RestaurantUpdateOneWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPopular: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: NullableIntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
}

input ProductUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPopular: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: NullableIntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
}

input ProductUpdateManyWithWhereWithoutProductCategoryInput {
  data: ProductUpdateManyMutationInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateManyWithWhereWithoutRestaurantInput {
  data: ProductUpdateManyMutationInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateManyWithoutProductCategoryInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutProductCategoryInput!]
  create: [ProductCreateWithoutProductCategoryInput!]
  createMany: ProductCreateManyProductCategoryInputEnvelope
  delete: [ProductWhereUniqueInput!]
  deleteMany: [ProductScalarWhereInput!]
  disconnect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutProductCategoryInput!]
  updateMany: [ProductUpdateManyWithWhereWithoutProductCategoryInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutProductCategoryInput!]
}

input ProductUpdateManyWithoutRestaurantInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutRestaurantInput!]
  create: [ProductCreateWithoutRestaurantInput!]
  createMany: ProductCreateManyRestaurantInputEnvelope
  delete: [ProductWhereUniqueInput!]
  deleteMany: [ProductScalarWhereInput!]
  disconnect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [ProductUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input ProductUpdateOneRequiredWithoutOrderItemInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutOrderItemInput
  create: ProductCreateWithoutOrderItemInput
  update: ProductUpdateWithoutOrderItemInput
  upsert: ProductUpsertWithoutOrderItemInput
}

input ProductUpdateWithWhereUniqueWithoutProductCategoryInput {
  data: ProductUpdateWithoutProductCategoryInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithWhereUniqueWithoutRestaurantInput {
  data: ProductUpdateWithoutRestaurantInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithoutOrderItemInput {
  ProductCategory: ProductCategoryUpdateOneWithoutProductInput
  Restaurant: RestaurantUpdateOneWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPopular: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: NullableIntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
}

input ProductUpdateWithoutProductCategoryInput {
  OrderItem: OrderItemUpdateManyWithoutProductInput
  Restaurant: RestaurantUpdateOneWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPopular: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: NullableIntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
}

input ProductUpdateWithoutRestaurantInput {
  OrderItem: OrderItemUpdateManyWithoutProductInput
  ProductCategory: ProductCategoryUpdateOneWithoutProductInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isActive: NullableBoolFieldUpdateOperationsInput
  isPopular: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: NullableIntFieldUpdateOperationsInput
  spiceLevel: EnumSpiceLevelFieldUpdateOperationsInput
}

input ProductUpsertWithWhereUniqueWithoutProductCategoryInput {
  create: ProductCreateWithoutProductCategoryInput!
  update: ProductUpdateWithoutProductCategoryInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithWhereUniqueWithoutRestaurantInput {
  create: ProductCreateWithoutRestaurantInput!
  update: ProductUpdateWithoutRestaurantInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithoutOrderItemInput {
  create: ProductCreateWithoutOrderItemInput!
  update: ProductUpdateWithoutOrderItemInput!
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  OrderItem: OrderItemListRelationFilter
  ProductCategory: ProductCategoryWhereInput
  Restaurant: RestaurantWhereInput
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  image: StringNullableFilter
  isActive: BoolNullableFilter
  isPopular: BoolNullableFilter
  name: StringFilter
  price: IntNullableFilter
  productCategoryId: StringNullableFilter
  restaurantId: StringNullableFilter
  spiceLevel: EnumSpiceLevelFilter
}

input ProductWhereUniqueInput {
  id: String
}

type Query {
  cmsAbout(where: CMSAboutWhereUniqueInput!): CMSAbout
  cmsAbouts(after: CMSAboutWhereUniqueInput, before: CMSAboutWhereUniqueInput, first: Int, last: Int, orderBy: [CMSAboutOrderByInput!], where: CMSAboutWhereInput): [CMSAbout!]!
  cmsContact(where: CMSContactWhereUniqueInput!): CMSContact
  cmsContacts(after: CMSContactWhereUniqueInput, before: CMSContactWhereUniqueInput, first: Int, last: Int, orderBy: [CMSContactOrderByInput!], where: CMSContactWhereInput): [CMSContact!]!
  cmsHome(where: CMSHomeWhereUniqueInput!): CMSHome
  cmsHomes(after: CMSHomeWhereUniqueInput, before: CMSHomeWhereUniqueInput, first: Int, last: Int, orderBy: [CMSHomeOrderByInput!], where: CMSHomeWhereInput): [CMSHome!]!
  cmsReservation(where: CMSReservationWhereUniqueInput!): CMSReservation
  cmsReservations(after: CMSReservationWhereUniqueInput, before: CMSReservationWhereUniqueInput, first: Int, last: Int, orderBy: [CMSReservationOrderByInput!], where: CMSReservationWhereInput): [CMSReservation!]!
  cmsReview(where: CMSReviewWhereUniqueInput!): CMSReview
  cmsReviews(after: CMSReviewWhereUniqueInput, before: CMSReviewWhereUniqueInput, first: Int, last: Int, orderBy: [CMSReviewOrderByInput!], where: CMSReviewWhereInput): [CMSReview!]!
  coupon(where: CouponWhereUniqueInput!): Coupon
  coupons(after: CouponWhereUniqueInput, before: CouponWhereUniqueInput, first: Int, last: Int, orderBy: [CouponOrderByInput!], where: CouponWhereInput): [Coupon!]!
  customer(where: CustomerWhereUniqueInput!): Customer
  customerAddress(where: CustomerAddressWhereUniqueInput!): CustomerAddress
  customerAddresses(after: CustomerAddressWhereUniqueInput, before: CustomerAddressWhereUniqueInput, first: Int, last: Int, orderBy: [CustomerAddressOrderByInput!], where: CustomerAddressWhereInput): [CustomerAddress!]!
  customerToken(where: CustomerTokenWhereUniqueInput!): CustomerToken
  customerTokens(after: CustomerTokenWhereUniqueInput, before: CustomerTokenWhereUniqueInput, first: Int, last: Int, orderBy: [CustomerTokenOrderByInput!], where: CustomerTokenWhereInput): [CustomerToken!]!
  customers(after: CustomerWhereUniqueInput, before: CustomerWhereUniqueInput, first: Int, last: Int, orderBy: [CustomerOrderByInput!], where: CustomerWhereInput): [Customer!]!
  deliveryZone(where: DeliveryZoneWhereUniqueInput!): DeliveryZone
  deliveryZones(after: DeliveryZoneWhereUniqueInput, before: DeliveryZoneWhereUniqueInput, first: Int, last: Int, orderBy: [DeliveryZoneOrderByInput!], where: DeliveryZoneWhereInput): [DeliveryZone!]!
  order(where: OrderWhereUniqueInput!): Order
  orderItem(where: OrderItemWhereUniqueInput!): OrderItem
  orderItems(after: OrderItemWhereUniqueInput, before: OrderItemWhereUniqueInput, first: Int, last: Int, orderBy: [OrderItemOrderByInput!], where: OrderItemWhereInput): [OrderItem!]!
  orders(after: OrderWhereUniqueInput, before: OrderWhereUniqueInput, first: Int, last: Int, orderBy: [OrderOrderByInput!], where: OrderWhereInput): [Order!]!
  product(where: ProductWhereUniqueInput!): Product
  productCategories(after: ProductCategoryWhereUniqueInput, before: ProductCategoryWhereUniqueInput, first: Int, last: Int, orderBy: [ProductCategoryOrderByInput!], where: ProductCategoryWhereInput): [ProductCategory!]!
  productCategory(where: ProductCategoryWhereUniqueInput!): ProductCategory
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int): [Product!]!
  restaurant(where: RestaurantWhereUniqueInput!): Restaurant
  restaurantConfig(where: RestaurantConfigWhereUniqueInput!): RestaurantConfig
  restaurantConfigs(after: RestaurantConfigWhereUniqueInput, before: RestaurantConfigWhereUniqueInput, first: Int, last: Int, orderBy: [RestaurantConfigOrderByInput!], where: RestaurantConfigWhereInput): [RestaurantConfig!]!
  restaurantPlan(where: RestaurantPlanWhereUniqueInput!): RestaurantPlan
  restaurantPlans(after: RestaurantPlanWhereUniqueInput, before: RestaurantPlanWhereUniqueInput, first: Int, last: Int, orderBy: [RestaurantPlanOrderByInput!], where: RestaurantPlanWhereInput): [RestaurantPlan!]!
  restaurantReview(where: RestaurantReviewWhereUniqueInput!): RestaurantReview
  restaurantReviews(after: RestaurantReviewWhereUniqueInput, before: RestaurantReviewWhereUniqueInput, first: Int, last: Int, orderBy: [RestaurantReviewOrderByInput!], where: RestaurantReviewWhereInput): [RestaurantReview!]!
  restaurantSocial(where: RestaurantSocialWhereUniqueInput!): RestaurantSocial
  restaurantSocials(after: RestaurantSocialWhereUniqueInput, before: RestaurantSocialWhereUniqueInput, first: Int, last: Int, orderBy: [RestaurantSocialOrderByInput!], where: RestaurantSocialWhereInput): [RestaurantSocial!]!
  restaurants(after: RestaurantWhereUniqueInput, before: RestaurantWhereUniqueInput, first: Int, last: Int, orderBy: [RestaurantOrderByInput!], where: RestaurantWhereInput): [Restaurant!]!
  schedule(where: ScheduleWhereUniqueInput!): Schedule
  schedules(after: ScheduleWhereUniqueInput, before: ScheduleWhereUniqueInput, first: Int, last: Int, orderBy: [ScheduleOrderByInput!], where: ScheduleWhereInput): [Schedule!]!
  user(where: UserWhereUniqueInput!): User
  userToken(where: UserTokenWhereUniqueInput!): UserToken
  userTokens(after: UserTokenWhereUniqueInput, before: UserTokenWhereUniqueInput, first: Int, last: Int): [UserToken!]!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

type Restaurant {
  RestaurantConfig(after: RestaurantConfigWhereUniqueInput, before: RestaurantConfigWhereUniqueInput, first: Int, last: Int): [RestaurantConfig!]!
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime!
  cuisine: String
  currency: String
  customers(after: CustomerWhereUniqueInput, before: CustomerWhereUniqueInput, first: Int, last: Int): [Customer!]!
  deliveryZones(after: DeliveryZoneWhereUniqueInput, before: DeliveryZoneWhereUniqueInput, first: Int, last: Int): [DeliveryZone!]!
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String!
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems(after: OrderItemWhereUniqueInput, before: OrderItemWhereUniqueInput, first: Int, last: Int): [OrderItem!]!
  orders(after: OrderWhereUniqueInput, before: OrderWhereUniqueInput, first: Int, last: Int): [Order!]!
  plan: RestaurantPlan
  postCode: String
  priceRange: String
  productCategory(after: ProductCategoryWhereUniqueInput, before: ProductCategoryWhereUniqueInput, first: Int, last: Int): [ProductCategory!]!
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int): [Product!]!
  reservationPhone: String
  restaurantPlanId: String
  schedules(after: ScheduleWhereUniqueInput, before: ScheduleWhereUniqueInput, first: Int, last: Int): [Schedule!]!
  serviceCharge: String
  url: String
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  vat: String
}

type RestaurantConfig {
  createdAt: DateTime!
  domain: String!
  id: String!
  isActive: Boolean!
  primaryColor: String!
  secondaryColor: String!
  updatedAt: DateTime!
}

input RestaurantConfigCreateInput {
  createdAt: DateTime
  domain: String!
  id: String
  isActive: Boolean!
  primaryColor: String!
  restaurant: RestaurantCreateNestedOneWithoutRestaurantConfigInput!
  secondaryColor: String!
  updatedAt: DateTime
}

input RestaurantConfigCreateManyRestaurantInput {
  createdAt: DateTime
  domain: String!
  id: String
  isActive: Boolean!
  primaryColor: String!
  secondaryColor: String!
  updatedAt: DateTime
}

input RestaurantConfigCreateManyRestaurantInputEnvelope {
  data: [RestaurantConfigCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input RestaurantConfigCreateNestedManyWithoutRestaurantInput {
  connect: [RestaurantConfigWhereUniqueInput!]
  connectOrCreate: [RestaurantConfigCreateOrConnectWithoutRestaurantInput!]
  create: [RestaurantConfigCreateWithoutRestaurantInput!]
  createMany: RestaurantConfigCreateManyRestaurantInputEnvelope
}

input RestaurantConfigCreateOrConnectWithoutRestaurantInput {
  create: RestaurantConfigCreateWithoutRestaurantInput!
  where: RestaurantConfigWhereUniqueInput!
}

input RestaurantConfigCreateWithoutRestaurantInput {
  createdAt: DateTime
  domain: String!
  id: String
  isActive: Boolean!
  primaryColor: String!
  secondaryColor: String!
  updatedAt: DateTime
}

input RestaurantConfigListRelationFilter {
  every: RestaurantConfigWhereInput
  none: RestaurantConfigWhereInput
  some: RestaurantConfigWhereInput
}

input RestaurantConfigOrderByInput {
  createdAt: SortOrder
  domain: SortOrder
  id: SortOrder
  isActive: SortOrder
  primaryColor: SortOrder
  restaurantId: SortOrder
  secondaryColor: SortOrder
  updatedAt: SortOrder
}

input RestaurantConfigScalarWhereInput {
  AND: [RestaurantConfigScalarWhereInput!]
  NOT: [RestaurantConfigScalarWhereInput!]
  OR: [RestaurantConfigScalarWhereInput!]
  createdAt: DateTimeFilter
  domain: StringFilter
  id: StringFilter
  isActive: BoolFilter
  primaryColor: StringFilter
  restaurantId: StringFilter
  secondaryColor: StringFilter
  updatedAt: DateTimeFilter
}

input RestaurantConfigUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  primaryColor: StringFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutRestaurantConfigInput
  secondaryColor: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantConfigUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  primaryColor: StringFieldUpdateOperationsInput
  secondaryColor: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantConfigUpdateManyWithWhereWithoutRestaurantInput {
  data: RestaurantConfigUpdateManyMutationInput!
  where: RestaurantConfigScalarWhereInput!
}

input RestaurantConfigUpdateManyWithoutRestaurantInput {
  connect: [RestaurantConfigWhereUniqueInput!]
  connectOrCreate: [RestaurantConfigCreateOrConnectWithoutRestaurantInput!]
  create: [RestaurantConfigCreateWithoutRestaurantInput!]
  createMany: RestaurantConfigCreateManyRestaurantInputEnvelope
  delete: [RestaurantConfigWhereUniqueInput!]
  deleteMany: [RestaurantConfigScalarWhereInput!]
  disconnect: [RestaurantConfigWhereUniqueInput!]
  set: [RestaurantConfigWhereUniqueInput!]
  update: [RestaurantConfigUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [RestaurantConfigUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [RestaurantConfigUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input RestaurantConfigUpdateWithWhereUniqueWithoutRestaurantInput {
  data: RestaurantConfigUpdateWithoutRestaurantInput!
  where: RestaurantConfigWhereUniqueInput!
}

input RestaurantConfigUpdateWithoutRestaurantInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  domain: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  primaryColor: StringFieldUpdateOperationsInput
  secondaryColor: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantConfigUpsertWithWhereUniqueWithoutRestaurantInput {
  create: RestaurantConfigCreateWithoutRestaurantInput!
  update: RestaurantConfigUpdateWithoutRestaurantInput!
  where: RestaurantConfigWhereUniqueInput!
}

input RestaurantConfigWhereInput {
  AND: [RestaurantConfigWhereInput!]
  NOT: [RestaurantConfigWhereInput!]
  OR: [RestaurantConfigWhereInput!]
  createdAt: DateTimeFilter
  domain: StringFilter
  id: StringFilter
  isActive: BoolFilter
  primaryColor: StringFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
  secondaryColor: StringFilter
  updatedAt: DateTimeFilter
}

input RestaurantConfigWhereUniqueInput {
  domain: String
  id: String
}

input RestaurantCreateInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateManyPlanInput {
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  postCode: String
  priceRange: String
  reservationPhone: String
  serviceCharge: String
  updatedAt: DateTime
  url: String
  vat: String
}

input RestaurantCreateManyPlanInputEnvelope {
  data: [RestaurantCreateManyPlanInput!]
  skipDuplicates: Boolean
}

input RestaurantCreateNestedManyWithoutCustomersInput {
  connect: [RestaurantWhereUniqueInput!]
  connectOrCreate: [RestaurantCreateOrConnectWithoutCustomersInput!]
  create: [RestaurantCreateWithoutCustomersInput!]
}

input RestaurantCreateNestedManyWithoutPlanInput {
  connect: [RestaurantWhereUniqueInput!]
  connectOrCreate: [RestaurantCreateOrConnectWithoutPlanInput!]
  create: [RestaurantCreateWithoutPlanInput!]
  createMany: RestaurantCreateManyPlanInputEnvelope
}

input RestaurantCreateNestedManyWithoutUsersInput {
  connect: [RestaurantWhereUniqueInput!]
  connectOrCreate: [RestaurantCreateOrConnectWithoutUsersInput!]
  create: [RestaurantCreateWithoutUsersInput!]
}

input RestaurantCreateNestedOneWithoutCMSAboutInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSAboutInput
  create: RestaurantCreateWithoutCMSAboutInput
}

input RestaurantCreateNestedOneWithoutCMSContactInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSContactInput
  create: RestaurantCreateWithoutCMSContactInput
}

input RestaurantCreateNestedOneWithoutCMSHomeInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSHomeInput
  create: RestaurantCreateWithoutCMSHomeInput
}

input RestaurantCreateNestedOneWithoutCMSReservationInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSReservationInput
  create: RestaurantCreateWithoutCMSReservationInput
}

input RestaurantCreateNestedOneWithoutCMSReviewInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSReviewInput
  create: RestaurantCreateWithoutCMSReviewInput
}

input RestaurantCreateNestedOneWithoutDeliveryZonesInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutDeliveryZonesInput
  create: RestaurantCreateWithoutDeliveryZonesInput
}

input RestaurantCreateNestedOneWithoutOrderItemsInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutOrderItemsInput
  create: RestaurantCreateWithoutOrderItemsInput
}

input RestaurantCreateNestedOneWithoutOrdersInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutOrdersInput
  create: RestaurantCreateWithoutOrdersInput
}

input RestaurantCreateNestedOneWithoutProductCategoryInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutProductCategoryInput
  create: RestaurantCreateWithoutProductCategoryInput
}

input RestaurantCreateNestedOneWithoutProductsInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutProductsInput
  create: RestaurantCreateWithoutProductsInput
}

input RestaurantCreateNestedOneWithoutRestaurantConfigInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutRestaurantConfigInput
  create: RestaurantCreateWithoutRestaurantConfigInput
}

input RestaurantCreateNestedOneWithoutRestaurantReviewInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutRestaurantReviewInput
  create: RestaurantCreateWithoutRestaurantReviewInput
}

input RestaurantCreateNestedOneWithoutRestaurantSocialInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutRestaurantSocialInput
  create: RestaurantCreateWithoutRestaurantSocialInput
}

input RestaurantCreateNestedOneWithoutSchedulesInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutSchedulesInput
  create: RestaurantCreateWithoutSchedulesInput
}

input RestaurantCreateOrConnectWithoutCMSAboutInput {
  create: RestaurantCreateWithoutCMSAboutInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutCMSContactInput {
  create: RestaurantCreateWithoutCMSContactInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutCMSHomeInput {
  create: RestaurantCreateWithoutCMSHomeInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutCMSReservationInput {
  create: RestaurantCreateWithoutCMSReservationInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutCMSReviewInput {
  create: RestaurantCreateWithoutCMSReviewInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutCustomersInput {
  create: RestaurantCreateWithoutCustomersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutDeliveryZonesInput {
  create: RestaurantCreateWithoutDeliveryZonesInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutOrderItemsInput {
  create: RestaurantCreateWithoutOrderItemsInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutOrdersInput {
  create: RestaurantCreateWithoutOrdersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutPlanInput {
  create: RestaurantCreateWithoutPlanInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutProductCategoryInput {
  create: RestaurantCreateWithoutProductCategoryInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutProductsInput {
  create: RestaurantCreateWithoutProductsInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutRestaurantConfigInput {
  create: RestaurantCreateWithoutRestaurantConfigInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutRestaurantReviewInput {
  create: RestaurantCreateWithoutRestaurantReviewInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutRestaurantSocialInput {
  create: RestaurantCreateWithoutRestaurantSocialInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutSchedulesInput {
  create: RestaurantCreateWithoutSchedulesInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateOrConnectWithoutUsersInput {
  create: RestaurantCreateWithoutUsersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantCreateWithoutCMSAboutInput {
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutCMSContactInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutCMSHomeInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutCMSReservationInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutCMSReviewInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutCustomersInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutDeliveryZonesInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutOrderItemsInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutOrdersInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutPlanInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutProductCategoryInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutProductsInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutRestaurantConfigInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutRestaurantReviewInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutRestaurantSocialInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutSchedulesInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  serviceCharge: String
  updatedAt: DateTime
  url: String
  users: UserCreateNestedManyWithoutRestaurantsInput
  vat: String
}

input RestaurantCreateWithoutUsersInput {
  CMSAbout: CMSAboutCreateNestedManyWithoutRestaurantInput
  CMSContact: CMSContactCreateNestedManyWithoutRestaurantInput
  CMSHome: CMSHomeCreateNestedManyWithoutRestaurantInput
  CMSReservation: CMSReservationCreateNestedManyWithoutRestaurantInput
  CMSReview: CMSReviewCreateNestedManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigCreateNestedManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewCreateNestedManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialCreateNestedManyWithoutRestaurantInput
  address: String
  businessPhone: String
  city: String
  country: String
  coverImage: String
  createdAt: DateTime
  cuisine: String
  currency: String
  customers: CustomerCreateNestedManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneCreateNestedManyWithoutRestaurantInput
  diningStyle: String
  email: String
  hasKidsZone: Boolean
  hasParkingFacilities: Boolean
  hasPartyFacilities: Boolean
  id: String
  isAutoAcceptOrder: Boolean
  isAutoAcceptReservation: Boolean
  isDelivery: Boolean
  isReservation: Boolean
  isTakeaway: Boolean
  logo: String
  name: String!
  orderItems: OrderItemCreateNestedManyWithoutRestaurantInput
  orders: OrderCreateNestedManyWithoutRestaurantInput
  plan: RestaurantPlanCreateNestedOneWithoutRestaurantsInput
  postCode: String
  priceRange: String
  productCategory: ProductCategoryCreateNestedManyWithoutRestaurantsInput
  products: ProductCreateNestedManyWithoutRestaurantInput
  reservationPhone: String
  schedules: ScheduleCreateNestedManyWithoutRestaurantInput
  serviceCharge: String
  updatedAt: DateTime
  url: String
  vat: String
}

input RestaurantListRelationFilter {
  every: RestaurantWhereInput
  none: RestaurantWhereInput
  some: RestaurantWhereInput
}

input RestaurantOrderByInput {
  address: SortOrder
  businessPhone: SortOrder
  city: SortOrder
  country: SortOrder
  coverImage: SortOrder
  createdAt: SortOrder
  cuisine: SortOrder
  currency: SortOrder
  diningStyle: SortOrder
  email: SortOrder
  hasKidsZone: SortOrder
  hasParkingFacilities: SortOrder
  hasPartyFacilities: SortOrder
  id: SortOrder
  isAutoAcceptOrder: SortOrder
  isAutoAcceptReservation: SortOrder
  isDelivery: SortOrder
  isReservation: SortOrder
  isTakeaway: SortOrder
  logo: SortOrder
  name: SortOrder
  postCode: SortOrder
  priceRange: SortOrder
  reservationPhone: SortOrder
  restaurantPlanId: SortOrder
  serviceCharge: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  vat: SortOrder
}

type RestaurantPlan {
  id: String!
  isActive: Boolean!
  name: String!
  price: Float!
  restaurants(after: RestaurantWhereUniqueInput, before: RestaurantWhereUniqueInput, first: Int, last: Int): [Restaurant!]!
}

input RestaurantPlanCreateInput {
  id: String
  isActive: Boolean!
  name: String!
  price: Float!
  restaurants: RestaurantCreateNestedManyWithoutPlanInput
}

input RestaurantPlanCreateNestedOneWithoutRestaurantsInput {
  connect: RestaurantPlanWhereUniqueInput
  connectOrCreate: RestaurantPlanCreateOrConnectWithoutRestaurantsInput
  create: RestaurantPlanCreateWithoutRestaurantsInput
}

input RestaurantPlanCreateOrConnectWithoutRestaurantsInput {
  create: RestaurantPlanCreateWithoutRestaurantsInput!
  where: RestaurantPlanWhereUniqueInput!
}

input RestaurantPlanCreateWithoutRestaurantsInput {
  id: String
  isActive: Boolean!
  name: String!
  price: Float!
}

input RestaurantPlanOrderByInput {
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  price: SortOrder
}

input RestaurantPlanUpdateInput {
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutPlanInput
}

input RestaurantPlanUpdateOneWithoutRestaurantsInput {
  connect: RestaurantPlanWhereUniqueInput
  connectOrCreate: RestaurantPlanCreateOrConnectWithoutRestaurantsInput
  create: RestaurantPlanCreateWithoutRestaurantsInput
  delete: Boolean
  disconnect: Boolean
  update: RestaurantPlanUpdateWithoutRestaurantsInput
  upsert: RestaurantPlanUpsertWithoutRestaurantsInput
}

input RestaurantPlanUpdateWithoutRestaurantsInput {
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
}

input RestaurantPlanUpsertWithoutRestaurantsInput {
  create: RestaurantPlanCreateWithoutRestaurantsInput!
  update: RestaurantPlanUpdateWithoutRestaurantsInput!
}

input RestaurantPlanWhereInput {
  AND: [RestaurantPlanWhereInput!]
  NOT: [RestaurantPlanWhereInput!]
  OR: [RestaurantPlanWhereInput!]
  id: StringFilter
  isActive: BoolFilter
  name: StringFilter
  price: FloatFilter
  restaurants: RestaurantListRelationFilter
}

input RestaurantPlanWhereUniqueInput {
  id: String
}

type RestaurantReview {
  createdAt: DateTime!
  customer: Customer!
  description: String!
  id: String!
  isActive: Boolean!
  rating: String!
  restaurant: Restaurant!
  title: String!
  updatedAt: DateTime!
}

input RestaurantReviewCreateInput {
  createdAt: DateTime
  customer: CustomerCreateNestedOneWithoutRestaurantReviewInput!
  description: String!
  id: String
  isActive: Boolean!
  rating: String!
  restaurant: RestaurantCreateNestedOneWithoutRestaurantReviewInput!
  title: String!
  updatedAt: DateTime
}

input RestaurantReviewCreateManyCustomerInput {
  createdAt: DateTime
  description: String!
  id: String
  isActive: Boolean!
  rating: String!
  restaurantId: String!
  title: String!
  updatedAt: DateTime
}

input RestaurantReviewCreateManyCustomerInputEnvelope {
  data: [RestaurantReviewCreateManyCustomerInput!]
  skipDuplicates: Boolean
}

input RestaurantReviewCreateManyRestaurantInput {
  createdAt: DateTime
  customerId: String!
  description: String!
  id: String
  isActive: Boolean!
  rating: String!
  title: String!
  updatedAt: DateTime
}

input RestaurantReviewCreateManyRestaurantInputEnvelope {
  data: [RestaurantReviewCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input RestaurantReviewCreateNestedManyWithoutCustomerInput {
  connect: [RestaurantReviewWhereUniqueInput!]
  connectOrCreate: [RestaurantReviewCreateOrConnectWithoutCustomerInput!]
  create: [RestaurantReviewCreateWithoutCustomerInput!]
  createMany: RestaurantReviewCreateManyCustomerInputEnvelope
}

input RestaurantReviewCreateNestedManyWithoutRestaurantInput {
  connect: [RestaurantReviewWhereUniqueInput!]
  connectOrCreate: [RestaurantReviewCreateOrConnectWithoutRestaurantInput!]
  create: [RestaurantReviewCreateWithoutRestaurantInput!]
  createMany: RestaurantReviewCreateManyRestaurantInputEnvelope
}

input RestaurantReviewCreateOrConnectWithoutCustomerInput {
  create: RestaurantReviewCreateWithoutCustomerInput!
  where: RestaurantReviewWhereUniqueInput!
}

input RestaurantReviewCreateOrConnectWithoutRestaurantInput {
  create: RestaurantReviewCreateWithoutRestaurantInput!
  where: RestaurantReviewWhereUniqueInput!
}

input RestaurantReviewCreateWithoutCustomerInput {
  createdAt: DateTime
  description: String!
  id: String
  isActive: Boolean!
  rating: String!
  restaurant: RestaurantCreateNestedOneWithoutRestaurantReviewInput!
  title: String!
  updatedAt: DateTime
}

input RestaurantReviewCreateWithoutRestaurantInput {
  createdAt: DateTime
  customer: CustomerCreateNestedOneWithoutRestaurantReviewInput!
  description: String!
  id: String
  isActive: Boolean!
  rating: String!
  title: String!
  updatedAt: DateTime
}

input RestaurantReviewListRelationFilter {
  every: RestaurantReviewWhereInput
  none: RestaurantReviewWhereInput
  some: RestaurantReviewWhereInput
}

input RestaurantReviewOrderByInput {
  createdAt: SortOrder
  customerId: SortOrder
  description: SortOrder
  id: SortOrder
  isActive: SortOrder
  rating: SortOrder
  restaurantId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input RestaurantReviewScalarWhereInput {
  AND: [RestaurantReviewScalarWhereInput!]
  NOT: [RestaurantReviewScalarWhereInput!]
  OR: [RestaurantReviewScalarWhereInput!]
  createdAt: DateTimeFilter
  customerId: StringFilter
  description: StringFilter
  id: StringFilter
  isActive: BoolFilter
  rating: StringFilter
  restaurantId: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input RestaurantReviewUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneRequiredWithoutRestaurantReviewInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  rating: StringFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutRestaurantReviewInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantReviewUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  rating: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantReviewUpdateManyWithWhereWithoutCustomerInput {
  data: RestaurantReviewUpdateManyMutationInput!
  where: RestaurantReviewScalarWhereInput!
}

input RestaurantReviewUpdateManyWithWhereWithoutRestaurantInput {
  data: RestaurantReviewUpdateManyMutationInput!
  where: RestaurantReviewScalarWhereInput!
}

input RestaurantReviewUpdateManyWithoutCustomerInput {
  connect: [RestaurantReviewWhereUniqueInput!]
  connectOrCreate: [RestaurantReviewCreateOrConnectWithoutCustomerInput!]
  create: [RestaurantReviewCreateWithoutCustomerInput!]
  createMany: RestaurantReviewCreateManyCustomerInputEnvelope
  delete: [RestaurantReviewWhereUniqueInput!]
  deleteMany: [RestaurantReviewScalarWhereInput!]
  disconnect: [RestaurantReviewWhereUniqueInput!]
  set: [RestaurantReviewWhereUniqueInput!]
  update: [RestaurantReviewUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [RestaurantReviewUpdateManyWithWhereWithoutCustomerInput!]
  upsert: [RestaurantReviewUpsertWithWhereUniqueWithoutCustomerInput!]
}

input RestaurantReviewUpdateManyWithoutRestaurantInput {
  connect: [RestaurantReviewWhereUniqueInput!]
  connectOrCreate: [RestaurantReviewCreateOrConnectWithoutRestaurantInput!]
  create: [RestaurantReviewCreateWithoutRestaurantInput!]
  createMany: RestaurantReviewCreateManyRestaurantInputEnvelope
  delete: [RestaurantReviewWhereUniqueInput!]
  deleteMany: [RestaurantReviewScalarWhereInput!]
  disconnect: [RestaurantReviewWhereUniqueInput!]
  set: [RestaurantReviewWhereUniqueInput!]
  update: [RestaurantReviewUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [RestaurantReviewUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [RestaurantReviewUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input RestaurantReviewUpdateWithWhereUniqueWithoutCustomerInput {
  data: RestaurantReviewUpdateWithoutCustomerInput!
  where: RestaurantReviewWhereUniqueInput!
}

input RestaurantReviewUpdateWithWhereUniqueWithoutRestaurantInput {
  data: RestaurantReviewUpdateWithoutRestaurantInput!
  where: RestaurantReviewWhereUniqueInput!
}

input RestaurantReviewUpdateWithoutCustomerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  rating: StringFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutRestaurantReviewInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantReviewUpdateWithoutRestaurantInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneRequiredWithoutRestaurantReviewInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  rating: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RestaurantReviewUpsertWithWhereUniqueWithoutCustomerInput {
  create: RestaurantReviewCreateWithoutCustomerInput!
  update: RestaurantReviewUpdateWithoutCustomerInput!
  where: RestaurantReviewWhereUniqueInput!
}

input RestaurantReviewUpsertWithWhereUniqueWithoutRestaurantInput {
  create: RestaurantReviewCreateWithoutRestaurantInput!
  update: RestaurantReviewUpdateWithoutRestaurantInput!
  where: RestaurantReviewWhereUniqueInput!
}

input RestaurantReviewWhereInput {
  AND: [RestaurantReviewWhereInput!]
  NOT: [RestaurantReviewWhereInput!]
  OR: [RestaurantReviewWhereInput!]
  createdAt: DateTimeFilter
  customer: CustomerWhereInput
  customerId: StringFilter
  description: StringFilter
  id: StringFilter
  isActive: BoolFilter
  rating: StringFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input RestaurantReviewWhereUniqueInput {
  id: String
}

input RestaurantScalarWhereInput {
  AND: [RestaurantScalarWhereInput!]
  NOT: [RestaurantScalarWhereInput!]
  OR: [RestaurantScalarWhereInput!]
  address: StringNullableFilter
  businessPhone: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  coverImage: StringNullableFilter
  createdAt: DateTimeFilter
  cuisine: StringNullableFilter
  currency: StringNullableFilter
  diningStyle: StringNullableFilter
  email: StringNullableFilter
  hasKidsZone: BoolNullableFilter
  hasParkingFacilities: BoolNullableFilter
  hasPartyFacilities: BoolNullableFilter
  id: StringFilter
  isAutoAcceptOrder: BoolNullableFilter
  isAutoAcceptReservation: BoolNullableFilter
  isDelivery: BoolNullableFilter
  isReservation: BoolNullableFilter
  isTakeaway: BoolNullableFilter
  logo: StringNullableFilter
  name: StringFilter
  postCode: StringNullableFilter
  priceRange: StringNullableFilter
  reservationPhone: StringNullableFilter
  restaurantPlanId: StringNullableFilter
  serviceCharge: StringNullableFilter
  updatedAt: DateTimeFilter
  url: StringNullableFilter
  vat: StringNullableFilter
}

type RestaurantSocial {
  facebook: String!
  id: String!
  instagram: String!
  isActive: Boolean!
  pinterest: String!
  restaurant: Restaurant!
}

input RestaurantSocialCreateInput {
  facebook: String!
  id: String
  instagram: String!
  isActive: Boolean!
  pinterest: String!
  restaurant: RestaurantCreateNestedOneWithoutRestaurantSocialInput!
}

input RestaurantSocialCreateManyRestaurantInput {
  facebook: String!
  id: String
  instagram: String!
  isActive: Boolean!
  pinterest: String!
}

input RestaurantSocialCreateManyRestaurantInputEnvelope {
  data: [RestaurantSocialCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input RestaurantSocialCreateNestedManyWithoutRestaurantInput {
  connect: [RestaurantSocialWhereUniqueInput!]
  connectOrCreate: [RestaurantSocialCreateOrConnectWithoutRestaurantInput!]
  create: [RestaurantSocialCreateWithoutRestaurantInput!]
  createMany: RestaurantSocialCreateManyRestaurantInputEnvelope
}

input RestaurantSocialCreateOrConnectWithoutRestaurantInput {
  create: RestaurantSocialCreateWithoutRestaurantInput!
  where: RestaurantSocialWhereUniqueInput!
}

input RestaurantSocialCreateWithoutRestaurantInput {
  facebook: String!
  id: String
  instagram: String!
  isActive: Boolean!
  pinterest: String!
}

input RestaurantSocialListRelationFilter {
  every: RestaurantSocialWhereInput
  none: RestaurantSocialWhereInput
  some: RestaurantSocialWhereInput
}

input RestaurantSocialOrderByInput {
  facebook: SortOrder
  id: SortOrder
  instagram: SortOrder
  isActive: SortOrder
  pinterest: SortOrder
  restaurantId: SortOrder
}

input RestaurantSocialScalarWhereInput {
  AND: [RestaurantSocialScalarWhereInput!]
  NOT: [RestaurantSocialScalarWhereInput!]
  OR: [RestaurantSocialScalarWhereInput!]
  facebook: StringFilter
  id: StringFilter
  instagram: StringFilter
  isActive: BoolFilter
  pinterest: StringFilter
  restaurantId: StringFilter
}

input RestaurantSocialUpdateInput {
  facebook: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instagram: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  pinterest: StringFieldUpdateOperationsInput
  restaurant: RestaurantUpdateOneRequiredWithoutRestaurantSocialInput
}

input RestaurantSocialUpdateManyMutationInput {
  facebook: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instagram: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  pinterest: StringFieldUpdateOperationsInput
}

input RestaurantSocialUpdateManyWithWhereWithoutRestaurantInput {
  data: RestaurantSocialUpdateManyMutationInput!
  where: RestaurantSocialScalarWhereInput!
}

input RestaurantSocialUpdateManyWithoutRestaurantInput {
  connect: [RestaurantSocialWhereUniqueInput!]
  connectOrCreate: [RestaurantSocialCreateOrConnectWithoutRestaurantInput!]
  create: [RestaurantSocialCreateWithoutRestaurantInput!]
  createMany: RestaurantSocialCreateManyRestaurantInputEnvelope
  delete: [RestaurantSocialWhereUniqueInput!]
  deleteMany: [RestaurantSocialScalarWhereInput!]
  disconnect: [RestaurantSocialWhereUniqueInput!]
  set: [RestaurantSocialWhereUniqueInput!]
  update: [RestaurantSocialUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [RestaurantSocialUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [RestaurantSocialUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input RestaurantSocialUpdateWithWhereUniqueWithoutRestaurantInput {
  data: RestaurantSocialUpdateWithoutRestaurantInput!
  where: RestaurantSocialWhereUniqueInput!
}

input RestaurantSocialUpdateWithoutRestaurantInput {
  facebook: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instagram: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  pinterest: StringFieldUpdateOperationsInput
}

input RestaurantSocialUpsertWithWhereUniqueWithoutRestaurantInput {
  create: RestaurantSocialCreateWithoutRestaurantInput!
  update: RestaurantSocialUpdateWithoutRestaurantInput!
  where: RestaurantSocialWhereUniqueInput!
}

input RestaurantSocialWhereInput {
  AND: [RestaurantSocialWhereInput!]
  NOT: [RestaurantSocialWhereInput!]
  OR: [RestaurantSocialWhereInput!]
  facebook: StringFilter
  id: StringFilter
  instagram: StringFilter
  isActive: BoolFilter
  pinterest: StringFilter
  restaurant: RestaurantWhereInput
  restaurantId: StringFilter
}

input RestaurantSocialWhereUniqueInput {
  id: String
}

input RestaurantUpdateInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateManyWithWhereWithoutCustomersInput {
  data: RestaurantUpdateManyMutationInput!
  where: RestaurantScalarWhereInput!
}

input RestaurantUpdateManyWithWhereWithoutPlanInput {
  data: RestaurantUpdateManyMutationInput!
  where: RestaurantScalarWhereInput!
}

input RestaurantUpdateManyWithWhereWithoutUsersInput {
  data: RestaurantUpdateManyMutationInput!
  where: RestaurantScalarWhereInput!
}

input RestaurantUpdateManyWithoutCustomersInput {
  connect: [RestaurantWhereUniqueInput!]
  connectOrCreate: [RestaurantCreateOrConnectWithoutCustomersInput!]
  create: [RestaurantCreateWithoutCustomersInput!]
  delete: [RestaurantWhereUniqueInput!]
  deleteMany: [RestaurantScalarWhereInput!]
  disconnect: [RestaurantWhereUniqueInput!]
  set: [RestaurantWhereUniqueInput!]
  update: [RestaurantUpdateWithWhereUniqueWithoutCustomersInput!]
  updateMany: [RestaurantUpdateManyWithWhereWithoutCustomersInput!]
  upsert: [RestaurantUpsertWithWhereUniqueWithoutCustomersInput!]
}

input RestaurantUpdateManyWithoutPlanInput {
  connect: [RestaurantWhereUniqueInput!]
  connectOrCreate: [RestaurantCreateOrConnectWithoutPlanInput!]
  create: [RestaurantCreateWithoutPlanInput!]
  createMany: RestaurantCreateManyPlanInputEnvelope
  delete: [RestaurantWhereUniqueInput!]
  deleteMany: [RestaurantScalarWhereInput!]
  disconnect: [RestaurantWhereUniqueInput!]
  set: [RestaurantWhereUniqueInput!]
  update: [RestaurantUpdateWithWhereUniqueWithoutPlanInput!]
  updateMany: [RestaurantUpdateManyWithWhereWithoutPlanInput!]
  upsert: [RestaurantUpsertWithWhereUniqueWithoutPlanInput!]
}

input RestaurantUpdateManyWithoutUsersInput {
  connect: [RestaurantWhereUniqueInput!]
  connectOrCreate: [RestaurantCreateOrConnectWithoutUsersInput!]
  create: [RestaurantCreateWithoutUsersInput!]
  delete: [RestaurantWhereUniqueInput!]
  deleteMany: [RestaurantScalarWhereInput!]
  disconnect: [RestaurantWhereUniqueInput!]
  set: [RestaurantWhereUniqueInput!]
  update: [RestaurantUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [RestaurantUpdateManyWithWhereWithoutUsersInput!]
  upsert: [RestaurantUpsertWithWhereUniqueWithoutUsersInput!]
}

input RestaurantUpdateOneRequiredWithoutCMSAboutInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSAboutInput
  create: RestaurantCreateWithoutCMSAboutInput
  update: RestaurantUpdateWithoutCMSAboutInput
  upsert: RestaurantUpsertWithoutCMSAboutInput
}

input RestaurantUpdateOneRequiredWithoutCMSContactInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSContactInput
  create: RestaurantCreateWithoutCMSContactInput
  update: RestaurantUpdateWithoutCMSContactInput
  upsert: RestaurantUpsertWithoutCMSContactInput
}

input RestaurantUpdateOneRequiredWithoutCMSHomeInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSHomeInput
  create: RestaurantCreateWithoutCMSHomeInput
  update: RestaurantUpdateWithoutCMSHomeInput
  upsert: RestaurantUpsertWithoutCMSHomeInput
}

input RestaurantUpdateOneRequiredWithoutCMSReservationInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSReservationInput
  create: RestaurantCreateWithoutCMSReservationInput
  update: RestaurantUpdateWithoutCMSReservationInput
  upsert: RestaurantUpsertWithoutCMSReservationInput
}

input RestaurantUpdateOneRequiredWithoutCMSReviewInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutCMSReviewInput
  create: RestaurantCreateWithoutCMSReviewInput
  update: RestaurantUpdateWithoutCMSReviewInput
  upsert: RestaurantUpsertWithoutCMSReviewInput
}

input RestaurantUpdateOneRequiredWithoutOrdersInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutOrdersInput
  create: RestaurantCreateWithoutOrdersInput
  update: RestaurantUpdateWithoutOrdersInput
  upsert: RestaurantUpsertWithoutOrdersInput
}

input RestaurantUpdateOneRequiredWithoutProductCategoryInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutProductCategoryInput
  create: RestaurantCreateWithoutProductCategoryInput
  update: RestaurantUpdateWithoutProductCategoryInput
  upsert: RestaurantUpsertWithoutProductCategoryInput
}

input RestaurantUpdateOneRequiredWithoutRestaurantConfigInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutRestaurantConfigInput
  create: RestaurantCreateWithoutRestaurantConfigInput
  update: RestaurantUpdateWithoutRestaurantConfigInput
  upsert: RestaurantUpsertWithoutRestaurantConfigInput
}

input RestaurantUpdateOneRequiredWithoutRestaurantReviewInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutRestaurantReviewInput
  create: RestaurantCreateWithoutRestaurantReviewInput
  update: RestaurantUpdateWithoutRestaurantReviewInput
  upsert: RestaurantUpsertWithoutRestaurantReviewInput
}

input RestaurantUpdateOneRequiredWithoutRestaurantSocialInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutRestaurantSocialInput
  create: RestaurantCreateWithoutRestaurantSocialInput
  update: RestaurantUpdateWithoutRestaurantSocialInput
  upsert: RestaurantUpsertWithoutRestaurantSocialInput
}

input RestaurantUpdateOneWithoutDeliveryZonesInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutDeliveryZonesInput
  create: RestaurantCreateWithoutDeliveryZonesInput
  delete: Boolean
  disconnect: Boolean
  update: RestaurantUpdateWithoutDeliveryZonesInput
  upsert: RestaurantUpsertWithoutDeliveryZonesInput
}

input RestaurantUpdateOneWithoutOrderItemsInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutOrderItemsInput
  create: RestaurantCreateWithoutOrderItemsInput
  delete: Boolean
  disconnect: Boolean
  update: RestaurantUpdateWithoutOrderItemsInput
  upsert: RestaurantUpsertWithoutOrderItemsInput
}

input RestaurantUpdateOneWithoutProductsInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutProductsInput
  create: RestaurantCreateWithoutProductsInput
  delete: Boolean
  disconnect: Boolean
  update: RestaurantUpdateWithoutProductsInput
  upsert: RestaurantUpsertWithoutProductsInput
}

input RestaurantUpdateOneWithoutSchedulesInput {
  connect: RestaurantWhereUniqueInput
  connectOrCreate: RestaurantCreateOrConnectWithoutSchedulesInput
  create: RestaurantCreateWithoutSchedulesInput
  delete: Boolean
  disconnect: Boolean
  update: RestaurantUpdateWithoutSchedulesInput
  upsert: RestaurantUpsertWithoutSchedulesInput
}

input RestaurantUpdateWithWhereUniqueWithoutCustomersInput {
  data: RestaurantUpdateWithoutCustomersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantUpdateWithWhereUniqueWithoutPlanInput {
  data: RestaurantUpdateWithoutPlanInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantUpdateWithWhereUniqueWithoutUsersInput {
  data: RestaurantUpdateWithoutUsersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantUpdateWithoutCMSAboutInput {
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutCMSContactInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutCMSHomeInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutCMSReservationInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutCMSReviewInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutCustomersInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutDeliveryZonesInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutOrderItemsInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutOrdersInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutPlanInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutProductCategoryInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutProductsInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutRestaurantConfigInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutRestaurantReviewInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutRestaurantSocialInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutSchedulesInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRestaurantsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpdateWithoutUsersInput {
  CMSAbout: CMSAboutUpdateManyWithoutRestaurantInput
  CMSContact: CMSContactUpdateManyWithoutRestaurantInput
  CMSHome: CMSHomeUpdateManyWithoutRestaurantInput
  CMSReservation: CMSReservationUpdateManyWithoutRestaurantInput
  CMSReview: CMSReviewUpdateManyWithoutRestaurantInput
  RestaurantConfig: RestaurantConfigUpdateManyWithoutRestaurantInput
  RestaurantReview: RestaurantReviewUpdateManyWithoutRestaurantInput
  RestaurantSocial: RestaurantSocialUpdateManyWithoutRestaurantInput
  address: NullableStringFieldUpdateOperationsInput
  businessPhone: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coverImage: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  cuisine: NullableStringFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customers: CustomerUpdateManyWithoutRestaurantsInput
  deliveryZones: DeliveryZoneUpdateManyWithoutRestaurantInput
  diningStyle: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  hasKidsZone: NullableBoolFieldUpdateOperationsInput
  hasParkingFacilities: NullableBoolFieldUpdateOperationsInput
  hasPartyFacilities: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAutoAcceptOrder: NullableBoolFieldUpdateOperationsInput
  isAutoAcceptReservation: NullableBoolFieldUpdateOperationsInput
  isDelivery: NullableBoolFieldUpdateOperationsInput
  isReservation: NullableBoolFieldUpdateOperationsInput
  isTakeaway: NullableBoolFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderItems: OrderItemUpdateManyWithoutRestaurantInput
  orders: OrderUpdateManyWithoutRestaurantInput
  plan: RestaurantPlanUpdateOneWithoutRestaurantsInput
  postCode: NullableStringFieldUpdateOperationsInput
  priceRange: NullableStringFieldUpdateOperationsInput
  productCategory: ProductCategoryUpdateManyWithoutRestaurantsInput
  products: ProductUpdateManyWithoutRestaurantInput
  reservationPhone: NullableStringFieldUpdateOperationsInput
  schedules: ScheduleUpdateManyWithoutRestaurantInput
  serviceCharge: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  vat: NullableStringFieldUpdateOperationsInput
}

input RestaurantUpsertWithWhereUniqueWithoutCustomersInput {
  create: RestaurantCreateWithoutCustomersInput!
  update: RestaurantUpdateWithoutCustomersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantUpsertWithWhereUniqueWithoutPlanInput {
  create: RestaurantCreateWithoutPlanInput!
  update: RestaurantUpdateWithoutPlanInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantUpsertWithWhereUniqueWithoutUsersInput {
  create: RestaurantCreateWithoutUsersInput!
  update: RestaurantUpdateWithoutUsersInput!
  where: RestaurantWhereUniqueInput!
}

input RestaurantUpsertWithoutCMSAboutInput {
  create: RestaurantCreateWithoutCMSAboutInput!
  update: RestaurantUpdateWithoutCMSAboutInput!
}

input RestaurantUpsertWithoutCMSContactInput {
  create: RestaurantCreateWithoutCMSContactInput!
  update: RestaurantUpdateWithoutCMSContactInput!
}

input RestaurantUpsertWithoutCMSHomeInput {
  create: RestaurantCreateWithoutCMSHomeInput!
  update: RestaurantUpdateWithoutCMSHomeInput!
}

input RestaurantUpsertWithoutCMSReservationInput {
  create: RestaurantCreateWithoutCMSReservationInput!
  update: RestaurantUpdateWithoutCMSReservationInput!
}

input RestaurantUpsertWithoutCMSReviewInput {
  create: RestaurantCreateWithoutCMSReviewInput!
  update: RestaurantUpdateWithoutCMSReviewInput!
}

input RestaurantUpsertWithoutDeliveryZonesInput {
  create: RestaurantCreateWithoutDeliveryZonesInput!
  update: RestaurantUpdateWithoutDeliveryZonesInput!
}

input RestaurantUpsertWithoutOrderItemsInput {
  create: RestaurantCreateWithoutOrderItemsInput!
  update: RestaurantUpdateWithoutOrderItemsInput!
}

input RestaurantUpsertWithoutOrdersInput {
  create: RestaurantCreateWithoutOrdersInput!
  update: RestaurantUpdateWithoutOrdersInput!
}

input RestaurantUpsertWithoutProductCategoryInput {
  create: RestaurantCreateWithoutProductCategoryInput!
  update: RestaurantUpdateWithoutProductCategoryInput!
}

input RestaurantUpsertWithoutProductsInput {
  create: RestaurantCreateWithoutProductsInput!
  update: RestaurantUpdateWithoutProductsInput!
}

input RestaurantUpsertWithoutRestaurantConfigInput {
  create: RestaurantCreateWithoutRestaurantConfigInput!
  update: RestaurantUpdateWithoutRestaurantConfigInput!
}

input RestaurantUpsertWithoutRestaurantReviewInput {
  create: RestaurantCreateWithoutRestaurantReviewInput!
  update: RestaurantUpdateWithoutRestaurantReviewInput!
}

input RestaurantUpsertWithoutRestaurantSocialInput {
  create: RestaurantCreateWithoutRestaurantSocialInput!
  update: RestaurantUpdateWithoutRestaurantSocialInput!
}

input RestaurantUpsertWithoutSchedulesInput {
  create: RestaurantCreateWithoutSchedulesInput!
  update: RestaurantUpdateWithoutSchedulesInput!
}

input RestaurantWhereInput {
  AND: [RestaurantWhereInput!]
  CMSAbout: CMSAboutListRelationFilter
  CMSContact: CMSContactListRelationFilter
  CMSHome: CMSHomeListRelationFilter
  CMSReservation: CMSReservationListRelationFilter
  CMSReview: CMSReviewListRelationFilter
  NOT: [RestaurantWhereInput!]
  OR: [RestaurantWhereInput!]
  RestaurantConfig: RestaurantConfigListRelationFilter
  RestaurantReview: RestaurantReviewListRelationFilter
  RestaurantSocial: RestaurantSocialListRelationFilter
  address: StringNullableFilter
  businessPhone: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  coverImage: StringNullableFilter
  createdAt: DateTimeFilter
  cuisine: StringNullableFilter
  currency: StringNullableFilter
  customers: CustomerListRelationFilter
  deliveryZones: DeliveryZoneListRelationFilter
  diningStyle: StringNullableFilter
  email: StringNullableFilter
  hasKidsZone: BoolNullableFilter
  hasParkingFacilities: BoolNullableFilter
  hasPartyFacilities: BoolNullableFilter
  id: StringFilter
  isAutoAcceptOrder: BoolNullableFilter
  isAutoAcceptReservation: BoolNullableFilter
  isDelivery: BoolNullableFilter
  isReservation: BoolNullableFilter
  isTakeaway: BoolNullableFilter
  logo: StringNullableFilter
  name: StringFilter
  orderItems: OrderItemListRelationFilter
  orders: OrderListRelationFilter
  plan: RestaurantPlanWhereInput
  postCode: StringNullableFilter
  priceRange: StringNullableFilter
  productCategory: ProductCategoryListRelationFilter
  products: ProductListRelationFilter
  reservationPhone: StringNullableFilter
  restaurantPlanId: StringNullableFilter
  schedules: ScheduleListRelationFilter
  serviceCharge: StringNullableFilter
  updatedAt: DateTimeFilter
  url: StringNullableFilter
  users: UserListRelationFilter
  vat: StringNullableFilter
}

input RestaurantWhereUniqueInput {
  id: String
}

enum Role {
  Admin
  Manager
  Owner
  SuperAdmin
}

type Schedule {
  Restaurant: Restaurant
  closingTime: String
  day: String
  deliveryTime: Int
  id: String!
  openingTime: String
  restaurantId: String
  takeawayTime: Int
}

input ScheduleCreateInput {
  Restaurant: RestaurantCreateNestedOneWithoutSchedulesInput
  closingTime: String
  createdAt: DateTime
  day: String
  deliveryTime: Int
  id: String
  openingTime: String
  takeawayTime: Int
}

input ScheduleCreateManyRestaurantInput {
  closingTime: String
  createdAt: DateTime
  day: String
  deliveryTime: Int
  id: String
  openingTime: String
  takeawayTime: Int
}

input ScheduleCreateManyRestaurantInputEnvelope {
  data: [ScheduleCreateManyRestaurantInput!]
  skipDuplicates: Boolean
}

input ScheduleCreateNestedManyWithoutRestaurantInput {
  connect: [ScheduleWhereUniqueInput!]
  connectOrCreate: [ScheduleCreateOrConnectWithoutRestaurantInput!]
  create: [ScheduleCreateWithoutRestaurantInput!]
  createMany: ScheduleCreateManyRestaurantInputEnvelope
}

input ScheduleCreateOrConnectWithoutRestaurantInput {
  create: ScheduleCreateWithoutRestaurantInput!
  where: ScheduleWhereUniqueInput!
}

input ScheduleCreateWithoutRestaurantInput {
  closingTime: String
  createdAt: DateTime
  day: String
  deliveryTime: Int
  id: String
  openingTime: String
  takeawayTime: Int
}

input ScheduleListRelationFilter {
  every: ScheduleWhereInput
  none: ScheduleWhereInput
  some: ScheduleWhereInput
}

input ScheduleOrderByInput {
  closingTime: SortOrder
  createdAt: SortOrder
  day: SortOrder
  deliveryTime: SortOrder
  id: SortOrder
  openingTime: SortOrder
  restaurantId: SortOrder
  takeawayTime: SortOrder
}

input ScheduleScalarWhereInput {
  AND: [ScheduleScalarWhereInput!]
  NOT: [ScheduleScalarWhereInput!]
  OR: [ScheduleScalarWhereInput!]
  closingTime: StringNullableFilter
  createdAt: DateTimeFilter
  day: StringNullableFilter
  deliveryTime: IntNullableFilter
  id: StringFilter
  openingTime: StringNullableFilter
  restaurantId: StringNullableFilter
  takeawayTime: IntNullableFilter
}

input ScheduleUpdateInput {
  Restaurant: RestaurantUpdateOneWithoutSchedulesInput
  closingTime: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  day: NullableStringFieldUpdateOperationsInput
  deliveryTime: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  openingTime: NullableStringFieldUpdateOperationsInput
  takeawayTime: NullableIntFieldUpdateOperationsInput
}

input ScheduleUpdateManyMutationInput {
  closingTime: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  day: NullableStringFieldUpdateOperationsInput
  deliveryTime: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  openingTime: NullableStringFieldUpdateOperationsInput
  takeawayTime: NullableIntFieldUpdateOperationsInput
}

input ScheduleUpdateManyWithWhereWithoutRestaurantInput {
  data: ScheduleUpdateManyMutationInput!
  where: ScheduleScalarWhereInput!
}

input ScheduleUpdateManyWithoutRestaurantInput {
  connect: [ScheduleWhereUniqueInput!]
  connectOrCreate: [ScheduleCreateOrConnectWithoutRestaurantInput!]
  create: [ScheduleCreateWithoutRestaurantInput!]
  createMany: ScheduleCreateManyRestaurantInputEnvelope
  delete: [ScheduleWhereUniqueInput!]
  deleteMany: [ScheduleScalarWhereInput!]
  disconnect: [ScheduleWhereUniqueInput!]
  set: [ScheduleWhereUniqueInput!]
  update: [ScheduleUpdateWithWhereUniqueWithoutRestaurantInput!]
  updateMany: [ScheduleUpdateManyWithWhereWithoutRestaurantInput!]
  upsert: [ScheduleUpsertWithWhereUniqueWithoutRestaurantInput!]
}

input ScheduleUpdateWithWhereUniqueWithoutRestaurantInput {
  data: ScheduleUpdateWithoutRestaurantInput!
  where: ScheduleWhereUniqueInput!
}

input ScheduleUpdateWithoutRestaurantInput {
  closingTime: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  day: NullableStringFieldUpdateOperationsInput
  deliveryTime: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  openingTime: NullableStringFieldUpdateOperationsInput
  takeawayTime: NullableIntFieldUpdateOperationsInput
}

input ScheduleUpsertWithWhereUniqueWithoutRestaurantInput {
  create: ScheduleCreateWithoutRestaurantInput!
  update: ScheduleUpdateWithoutRestaurantInput!
  where: ScheduleWhereUniqueInput!
}

input ScheduleWhereInput {
  AND: [ScheduleWhereInput!]
  NOT: [ScheduleWhereInput!]
  OR: [ScheduleWhereInput!]
  Restaurant: RestaurantWhereInput
  closingTime: StringNullableFilter
  createdAt: DateTimeFilter
  day: StringNullableFilter
  deliveryTime: IntNullableFilter
  id: StringFilter
  openingTime: StringNullableFilter
  restaurantId: StringNullableFilter
  takeawayTime: IntNullableFilter
}

input ScheduleWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

enum SpiceLevel {
  ExtraHot
  Hot
  Medium
  Mild
  None
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  phone: String
  restaurants(after: RestaurantWhereUniqueInput, before: RestaurantWhereUniqueInput, first: Int, last: Int): [Restaurant!]!
  role: Role!
  token(after: UserTokenWhereUniqueInput, before: UserTokenWhereUniqueInput, first: Int, last: Int): [UserToken!]!
}

input UserCreateInput {
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  password: String!
  phone: String
  restaurants: RestaurantCreateNestedManyWithoutUsersInput
  role: Role
  token: UserTokenCreateNestedManyWithoutUserInput
}

input UserCreateNestedManyWithoutRestaurantsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutRestaurantsInput!]
  create: [UserCreateWithoutRestaurantsInput!]
}

input UserCreateNestedOneWithoutTokenInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTokenInput
  create: UserCreateWithoutTokenInput
}

input UserCreateOrConnectWithoutRestaurantsInput {
  create: UserCreateWithoutRestaurantsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTokenInput {
  create: UserCreateWithoutTokenInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutRestaurantsInput {
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  password: String!
  phone: String
  role: Role
  token: UserTokenCreateNestedManyWithoutUserInput
}

input UserCreateWithoutTokenInput {
  createdAt: DateTime
  email: String!
  firstName: String!
  id: String
  lastName: String!
  password: String!
  phone: String
  restaurants: RestaurantCreateNestedManyWithoutUsersInput
  role: Role
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  password: StringFilter
  phone: StringNullableFilter
  role: EnumRoleFilter
}

type UserToken {
  User: User
  id: String!
  provider: String
  token: String!
  userId: String
}

input UserTokenCreateInput {
  User: UserCreateNestedOneWithoutTokenInput
  createdAt: DateTime
  id: String
  provider: String
  token: String!
  updatedAt: DateTime
}

input UserTokenCreateManyUserInput {
  createdAt: DateTime
  id: String
  provider: String
  token: String!
  updatedAt: DateTime
}

input UserTokenCreateManyUserInputEnvelope {
  data: [UserTokenCreateManyUserInput!]
  skipDuplicates: Boolean
}

input UserTokenCreateNestedManyWithoutUserInput {
  connect: [UserTokenWhereUniqueInput!]
  connectOrCreate: [UserTokenCreateOrConnectWithoutUserInput!]
  create: [UserTokenCreateWithoutUserInput!]
  createMany: UserTokenCreateManyUserInputEnvelope
}

input UserTokenCreateOrConnectWithoutUserInput {
  create: UserTokenCreateWithoutUserInput!
  where: UserTokenWhereUniqueInput!
}

input UserTokenCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  provider: String
  token: String!
  updatedAt: DateTime
}

input UserTokenListRelationFilter {
  every: UserTokenWhereInput
  none: UserTokenWhereInput
  some: UserTokenWhereInput
}

input UserTokenScalarWhereInput {
  AND: [UserTokenScalarWhereInput!]
  NOT: [UserTokenScalarWhereInput!]
  OR: [UserTokenScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  provider: StringNullableFilter
  token: StringFilter
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
}

input UserTokenUpdateInput {
  User: UserUpdateOneWithoutTokenInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  provider: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserTokenUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  provider: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserTokenUpdateManyWithWhereWithoutUserInput {
  data: UserTokenUpdateManyMutationInput!
  where: UserTokenScalarWhereInput!
}

input UserTokenUpdateManyWithoutUserInput {
  connect: [UserTokenWhereUniqueInput!]
  connectOrCreate: [UserTokenCreateOrConnectWithoutUserInput!]
  create: [UserTokenCreateWithoutUserInput!]
  createMany: UserTokenCreateManyUserInputEnvelope
  delete: [UserTokenWhereUniqueInput!]
  deleteMany: [UserTokenScalarWhereInput!]
  disconnect: [UserTokenWhereUniqueInput!]
  set: [UserTokenWhereUniqueInput!]
  update: [UserTokenUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserTokenUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserTokenUpsertWithWhereUniqueWithoutUserInput!]
}

input UserTokenUpdateWithWhereUniqueWithoutUserInput {
  data: UserTokenUpdateWithoutUserInput!
  where: UserTokenWhereUniqueInput!
}

input UserTokenUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  provider: NullableStringFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserTokenUpsertWithWhereUniqueWithoutUserInput {
  create: UserTokenCreateWithoutUserInput!
  update: UserTokenUpdateWithoutUserInput!
  where: UserTokenWhereUniqueInput!
}

input UserTokenWhereInput {
  AND: [UserTokenWhereInput!]
  NOT: [UserTokenWhereInput!]
  OR: [UserTokenWhereInput!]
  User: UserWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  provider: StringNullableFilter
  token: StringFilter
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
}

input UserTokenWhereUniqueInput {
  id: String
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutUsersInput
  role: EnumRoleFieldUpdateOperationsInput
  token: UserTokenUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
}

input UserUpdateManyWithWhereWithoutRestaurantsInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithoutRestaurantsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutRestaurantsInput!]
  create: [UserCreateWithoutRestaurantsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutRestaurantsInput!]
  updateMany: [UserUpdateManyWithWhereWithoutRestaurantsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutRestaurantsInput!]
}

input UserUpdateOneWithoutTokenInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTokenInput
  create: UserCreateWithoutTokenInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutTokenInput
  upsert: UserUpsertWithoutTokenInput
}

input UserUpdateWithWhereUniqueWithoutRestaurantsInput {
  data: UserUpdateWithoutRestaurantsInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithoutRestaurantsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  token: UserTokenUpdateManyWithoutUserInput
}

input UserUpdateWithoutTokenInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  restaurants: RestaurantUpdateManyWithoutUsersInput
  role: EnumRoleFieldUpdateOperationsInput
}

input UserUpsertWithWhereUniqueWithoutRestaurantsInput {
  create: UserCreateWithoutRestaurantsInput!
  update: UserUpdateWithoutRestaurantsInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutTokenInput {
  create: UserCreateWithoutTokenInput!
  update: UserUpdateWithoutTokenInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  password: StringFilter
  phone: StringNullableFilter
  restaurants: RestaurantListRelationFilter
  role: EnumRoleFilter
  token: UserTokenListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
